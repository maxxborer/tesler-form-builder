{"version":3,"sources":["widgets/LogoWidget.tsx","service/schema.ts","widgets/ActionsWidget.tsx","widgets/PreviewWidget.tsx","widgets/SchemaEditorWidget.tsx","widgets/MarkupSchemaWidget.tsx","common/Container/index.tsx","locales/Component.ts","locales/Field.ts","locales/Input.ts","locales/Select.ts","locales/TextArea.ts","locales/TreeSelect.ts","locales/Cascader.ts","locales/Radio.ts","locales/Checkbox.ts","locales/Slider.ts","locales/Rate.ts","locales/DatePicker.ts","locales/TimePicker.ts","locales/NumberPicker.ts","locales/Password.ts","locales/Transfer.ts","locales/Upload.ts","locales/Switch.ts","locales/Object.ts","locales/Form.ts","locales/FormLayout.ts","locales/Text.ts","locales/Card.ts","locales/ArrayBase.ts","locales/ArrayCards.ts","locales/ArrayTable.ts","locales/Void.ts","locales/Space.ts","locales/FormTab.ts","locales/FormCollapse.ts","locales/FormGrid.ts","components/Field/preview.tsx","common/FormItemSwitcher/index.tsx","schemas/Input.ts","schemas/Text.ts","schemas/FormLayout.ts","schemas/CSSStyle.ts","schemas/Form.ts","schemas/FormItem.ts","schemas/Select.ts","schemas/Card.ts","schemas/Cascader.ts","schemas/Checkbox.ts","schemas/Radio.ts","schemas/DatePicker.ts","schemas/NumberPicker.ts","schemas/Password.ts","schemas/Rate.ts","schemas/Slider.ts","schemas/TimePicker.ts","schemas/TreeSelect.ts","schemas/Transfer.ts","schemas/Upload.ts","schemas/Switch.ts","schemas/FormGrid.ts","schemas/Space.ts","schemas/FormTab.ts","schemas/FormCollapse.ts","schemas/ArrayTable.ts","schemas/ArrayCards.ts","components/Field/shared.ts","components/Form/preview.tsx","components/Input/preview.ts","components/Select/preview.tsx","components/TreeSelect/preview.tsx","components/Cascader/preview.tsx","components/Radio/preview.tsx","components/Checkbox/preview.tsx","components/Slider/preview.tsx","components/Rate/preview.tsx","components/NumberPicker/preview.ts","components/Transfer/preview.tsx","components/Password/preview.tsx","components/DatePicker/preview.tsx","components/TimePicker/preview.tsx","components/Upload/preview.tsx","components/Switch/preview.tsx","components/Text/preview.tsx","components/Card/preview.tsx","components/Space/preview.tsx","components/Object/preview.tsx","common/LoadTemplate/index.tsx","shared.ts","hooks/useDropTemplate.ts","components/ArrayBase/index.ts","components/ArrayCards/preview.tsx","components/ArrayTable/preview.tsx","components/FormTab/preview.tsx","components/FormCollapse/preview.tsx","components/FormGrid/preview.tsx","components/FormLayout/preview.ts","TeslerFormBuilder.tsx"],"names":["LogoWidget","style","display","alignItems","fontSize","saveSchema","designer","localStorage","setItem","JSON","stringify","transformToSchema","getCurrentTree","message","success","ActionsWidget","observer","useDesigner","useEffect","setCurrentTree","transformToTreeNode","parse","getItem","loadInitialSchema","supportLocales","includes","GlobalRegistry","getDesignerLanguage","setDesignerLanguage","marginRight","Group","value","optionType","options","label","onChange","e","target","onClick","type","SchemaField","createSchemaField","components","Space","FormGrid","FormLayout","FormTab","FormCollapse","ArrayTable","ArrayCards","FormItem","DatePicker","Checkbox","Cascader","Editable","Input","Text","mode","content","props","tagName","React","createElement","NumberPicker","Switch","Password","PreviewText","Radio","Reset","Select","Submit","TimePicker","Transfer","TreeSelect","Upload","Card","Slider","Rate","PreviewWidget","form","useMemo","createForm","tree","formProps","schema","SchemaEditorWidget","language","transformToMarkupSchemaCode","printAttribute","node","depth","name","id","Object","keys","map","key","isPlainObj","isEmpty","join","printChildren","children","child","printNode","printTag","length","root","find","componentName","MarkupSchemaWidget","readOnly","Container","withContainer","Target","Component","settings","width","height","background","boxShadow","font","margin","padding","borderRadius","border","opacity","Field","title","required","description","default","enum","tooltip","dataSource","size","allowClear","autoFocus","showSearch","notFoundContent","bordered","placeholder","addonAfter","addonBefore","asterisk","gridSpan","labelCol","wrapperCol","colon","labelAlign","wrapperAlign","labelWrap","wrapperWrap","labelWidth","wrapperWidth","fullness","inset","shallow","layout","feedbackLayout","tooltipLayout","maxLength","prefix","suffix","autoSize","showCount","checkStrength","autoClearSearchValue","defaultActiveFirstOption","dropdownMatchSelectWidth","defaultOpen","filterOption","filterSort","labelInValue","listHeight","maxTagCount","maxTagPlaceholder","maxTagTextLength","showArrow","virtual","TextArea","showCheckedStrategy","treeCheckable","treeDefaultExpandAll","treeDefaultExpandedKeys","treeNodeFilterProp","treeDataSimpleMode","treeNodeLabelProp","filterTreeNode","changeOnSelect","displayRender","fieldNames","RadioGroup","buttonStyle","CheckboxGroup","dots","range","reverse","vertical","tooltipPlacement","tooltipVisible","max","min","step","marks","allowHalf","tooltips","count","disabledDate","disabledTime","inputReadOnly","format","picker","showNow","showTime","showToday","DateRangePicker","createLocales","clearText","disabledHours","disabledMinutes","disabledSeconds","hideDisabledOptions","hourStep","minuteStep","secondStep","use12Hours","TimeRangePicker","formatter","keyboard","parser","decimalSeparator","precision","stringMode","oneWay","operations","titles","showSearchAll","accept","action","data","directory","headers","listType","multiple","openFileDialogOnClick","showUploadList","withCredentials","maxCount","method","textContent","UploadDragger","ObjectLocale","Form","extra","cardTypes","registerDesignerLocales","Previews","droppable","addTabPane","addCollapsePanel","addTableColumn","addTableSortHandle","addIndex","addOperation","ArrayAddition","defaultValue","ArrayRemove","ArrayMoveUp","ArrayMoveDown","ArrayIndex","ArraySortHandle","addSortHandle","addColumn","showHeader","sticky","align","colSpan","fixed","tableLayout","ArrayTableColumn","Void","direction","split","wrap","animated","centered","tab","FormTabPane","accordion","collapsible","ghost","FormCollapsePanel","header","addGridColumn","minWidth","minColumns","maxWidth","maxColumns","breakpoints","columnGap","rowGap","colWrap","FormGridColumn","Schema","silent","SchemaStateMap","writeOnly","NeedShownExpression","isExpression","val","isStr","test","filterExpression","isArray","isArr","reduce","buf","results","undefined","concat","toDesignableFieldProps","nodeIdAttrName","each","fieldKey","schemaKey","decorator","FormPath","getIn","component","decoratorProps","componentProps","toJS","setIn","useComponents","useTreeNode","fieldProps","Behavior","createBehavior","selector","designerLocales","AllLocales","FormItemSwitcher","checked","eventValue","properties","defaultChecked","CSSStyle","include","getDesignerMessage","CommonDatePickerAPI","RangePicker","CommonTimePickerAPI","Dragger","Column","Addition","createComponentSchema","fulfill","state","visible","defaultExpand","AllSchemas","createFieldSchema","DataSourceSetter","ReactionsSetter","ValidatorSetter","createVoidFieldSchema","hidden","usePrefix","designable","className","designerProps","draggable","isRoot","cloneable","deletable","propsSchema","defaultProps","Resource","createResource","icon","elements","FormilyInput","extends","FormilySelect","FormilyTreeSelect","FormilyCascader","FormilyRadio","FormilyCheckbox","AntdSlider","AntdRate","FormilyNumberPicker","FormilyTransfer","FormilyPassword","FormilyDatePicker","FormilyTimePicker","FormilyUpload","AntdSwitch","cls","FormilySpace","inlineChildrenLayout","ObjectContainer","LoadTemplate","actions","Action","matchComponent","context","Array","queryNodesByComponentPath","path","slice","findNodeByComponentPath","i","next","hasNodeByComponentPath","createNodeId","createEnsureTypeItemsNode","objectNode","newObjectNode","TreeNode","prepend","useDropTemplate","getChildren","subscribeTo","AppendNodeEvent","event","source","every","indexOf","matchChildComponent","setChildren","createArrayBehavior","allowDrop","parent","ensureObjectItemsNode","isArrayCardsOperation","nodeId","useNodeIdProps","indexNode","additionNode","removeNode","moveDownNode","moveUpNode","additions","indexes","disabled","Item","index","record","hasChildren","renderCard","getMessage","append","insertAfter","oldRemoveNode","oldMoveDownNode","oldMoveUpNode","ArrayBase","mixin","HeaderCell","match","BodyCell","sortHandleNode","columnNode","operationNode","columns","defaultRowKey","scroll","x","marginBottom","rowKey","pagination","cell","body","dataIndex","render","tableColumn","sortNode","insertBefore","oldOperationNode","oldAdditionNode","getCorrectActiveKey","activeKey","tabs","some","useState","setActiveKey","forEach","push","parseTabs","TabPane","renderTabs","tabPane","allowAppend","panelNode","toArr","panels","parseCollapse","panel","Panel","renderCollapse","CollapsePanel","column","GridColumn","resizable","span","Number","plus","minus","resizeXPath","resizeStep","resizeMin","resizeMax","FormilyFormLayout","sources","Inputs","Layouts","Arrays","Displays","App","engine","createDesigner","shortcuts","Shortcut","codes","KeyCode","Meta","S","Control","handler","ctx","rootComponentName","logo","use","scrollable","uploadAction"],"mappings":"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","file":"static/js/main.8b2534fb.chunk.js","sourcesContent":["import React from \"react\";\n// import { useTheme } from \"@designable/react\";\n\n// const logo = {\n//   dark: \"//img.alicdn.com/imgextra/i2/O1CN01NTUDi81fHLQvZCPnc_!!6000000003981-55-tps-1141-150.svg\",\n//   light:\n//     \"//img.alicdn.com/imgextra/i2/O1CN01Kq3OHU1fph6LGqjIz_!!6000000004056-55-tps-1141-150.svg\",\n// };\n\nexport const LogoWidget: React.FC = () => {\n  // const url = logo[useTheme()];\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\", fontSize: 14 }}>\n      {/* <img\n        src={url}\n        style={{ margin: \"12px 8px\", height: 18, width: \"auto\" }}\n      /> */}\n    </div>\n  );\n};\n","import { Engine } from \"@designable/core\";\nimport { transformToSchema, transformToTreeNode } from \"@designable/formily-transformer\";\nimport { message } from \"antd\";\n\nexport const saveSchema = (designer: Engine) => {\n  localStorage.setItem(\"formily-schema\", JSON.stringify(transformToSchema(designer.getCurrentTree())));\n  message.success(\"Успешно сохранено\");\n};\n\nexport const loadInitialSchema = (designer: Engine) => {\n  try {\n    designer.setCurrentTree(transformToTreeNode(JSON.parse(localStorage.getItem(\"formily-schema\"))));\n  } catch {}\n};\n","import React, { useEffect } from \"react\";\nimport { Space, Button, Radio } from \"antd\";\nimport { useDesigner, TextWidget } from \"@designable/react\";\nimport { GlobalRegistry } from \"@designable/core\";\nimport { observer } from \"@formily/react\";\nimport { loadInitialSchema, saveSchema } from \"../service\";\n\nexport const ActionsWidget = observer(() => {\n  const designer = useDesigner();\n  useEffect(() => {\n    loadInitialSchema(designer);\n  }, []);\n  const supportLocales = [\"ru-ru\"];\n  useEffect(() => {\n    if (!supportLocales.includes(GlobalRegistry.getDesignerLanguage())) {\n      GlobalRegistry.setDesignerLanguage(\"ru-ru\");\n    }\n  }, []);\n  return (\n    <Space style={{ marginRight: 10 }}>\n      {/* <Button href=\"https://designable-fusion.formilyjs.org\">\n        Alibaba Fusion\n      </Button> */}\n      <Radio.Group\n        value={GlobalRegistry.getDesignerLanguage()}\n        optionType=\"button\"\n        options={[\n          { label: \"Русский\", value: \"ru-ru\" },\n          { label: \"English\", value: \"en-us\" },\n        ]}\n        onChange={e => {\n          GlobalRegistry.setDesignerLanguage(e.target.value);\n        }}\n      />\n      <Button\n        onClick={() => {\n          saveSchema(designer);\n        }}\n      >\n        <TextWidget>Сохранить</TextWidget>\n      </Button>\n      <Button\n        type=\"primary\"\n        onClick={() => {\n          saveSchema(designer);\n        }}\n      >\n        <TextWidget>Опубликовать</TextWidget>\n      </Button>\n    </Space>\n  );\n});\n","import React, { useMemo } from \"react\";\nimport { createForm } from \"@formily/core\";\nimport { createSchemaField } from \"@formily/react\";\nimport {\n  Form,\n  FormItem,\n  DatePicker,\n  Checkbox,\n  Cascader,\n  Editable,\n  Input,\n  NumberPicker,\n  Switch,\n  Password,\n  PreviewText,\n  Radio,\n  Reset,\n  Select,\n  Space,\n  Submit,\n  TimePicker,\n  Transfer,\n  TreeSelect,\n  Upload,\n  FormGrid,\n  FormLayout,\n  FormTab,\n  FormCollapse,\n  ArrayTable,\n  ArrayCards,\n} from \"@formily/antd\";\nimport { Card, Slider, Rate } from \"antd\";\nimport { TreeNode } from \"@designable/core\";\nimport { transformToSchema } from \"@designable/formily-transformer\";\n\nconst Text: React.FC<{\n  value?: string;\n  content?: string;\n  mode?: \"normal\" | \"h1\" | \"h2\" | \"h3\" | \"p\";\n}> = ({ value, mode, content, ...props }) => {\n  const tagName = mode === \"normal\" || !mode ? \"div\" : mode;\n  return React.createElement(tagName, props, value || content);\n};\n\nconst SchemaField = createSchemaField({\n  components: {\n    Space,\n    FormGrid,\n    FormLayout,\n    FormTab,\n    FormCollapse,\n    ArrayTable,\n    ArrayCards,\n    FormItem,\n    DatePicker,\n    Checkbox,\n    Cascader,\n    Editable,\n    Input,\n    Text,\n    NumberPicker,\n    Switch,\n    Password,\n    PreviewText,\n    Radio,\n    Reset,\n    Select,\n    Submit,\n    TimePicker,\n    Transfer,\n    TreeSelect,\n    Upload,\n    Card,\n    Slider,\n    Rate,\n  },\n});\n\nexport interface IPreviewWidgetProps {\n  tree: TreeNode;\n}\n\nexport const PreviewWidget: React.FC<IPreviewWidgetProps> = props => {\n  const form = useMemo(() => createForm(), []);\n  const { form: formProps, schema } = transformToSchema(props.tree);\n  return (\n    <Form {...formProps} form={form}>\n      <SchemaField schema={schema} />\n    </Form>\n  );\n};\n","import React from \"react\";\nimport { transformToSchema, transformToTreeNode } from \"@designable/formily-transformer\";\nimport { TreeNode, ITreeNode } from \"@designable/core\";\nimport { MonacoInput } from \"@designable/react-settings-form\";\n\nexport interface ISchemaEditorWidgetProps {\n  tree: TreeNode;\n  onChange?: (tree: ITreeNode) => void;\n}\n\nexport const SchemaEditorWidget: React.FC<ISchemaEditorWidgetProps> = props => {\n  return (\n    <MonacoInput\n      {...props}\n      value={JSON.stringify(transformToSchema(props.tree), null, 2)}\n      onChange={value => {\n        props.onChange?.(transformToTreeNode(JSON.parse(value)));\n      }}\n      language=\"json\"\n    />\n  );\n};\n","import React from \"react\";\nimport { TreeNode } from \"@designable/core\";\nimport { MonacoInput } from \"@designable/react-settings-form\";\nimport { isEmpty, isPlainObj } from \"@formily/shared\";\n\nexport interface IMarkupSchemaWidgetProps {\n  tree: TreeNode;\n}\n\nconst transformToMarkupSchemaCode = (tree: TreeNode) => {\n  const printAttribute = (node: TreeNode) => {\n    if (!node) {\n      return \"\";\n    }\n    const props = { ...node.props };\n    if (node.depth !== 0) {\n      props.name = node.props.name || node.id;\n    }\n    return `${Object.keys(props)\n      .map(key => {\n        if (\n          key === \"x-designable-id\" ||\n          key === \"x-designable-source-name\" ||\n          key === \"_isJSONSchemaObject\" ||\n          key === \"version\" ||\n          key === \"type\"\n        ) {\n          return \"\";\n        }\n        const value = props[key];\n        if (isPlainObj(value) && isEmpty(value)) {\n          return \"\";\n        }\n        if (typeof value === \"string\") {\n          return `${key}=\"${value}\"`;\n        }\n        return `${key}={${JSON.stringify(value)}}`;\n      })\n      .join(\" \")}`;\n  };\n  const printChildren = (node: TreeNode) => {\n    if (!node) {\n      return \"\";\n    }\n    return node.children\n      .map(child => {\n        return printNode(child);\n      })\n      .join(\"\");\n  };\n  const printTag = (node: TreeNode) => {\n    if (node.props.type === \"string\") {\n      return \"SchemaField.String\";\n    }\n    if (node.props.type === \"number\") {\n      return \"SchemaField.Number\";\n    }\n    if (node.props.type === \"boolean\") {\n      return \"SchemaField.Boolean\";\n    }\n    if (node.props.type === \"date\") {\n      return \"SchemaField.Date\";\n    }\n    if (node.props.type === \"datetime\") {\n      return \"SchemaField.DateTime\";\n    }\n    if (node.props.type === \"array\") {\n      return \"SchemaField.Array\";\n    }\n    if (node.props.type === \"object\") {\n      return \"SchemaField.Object\";\n    }\n    if (node.props.type === \"void\") {\n      return \"SchemaField.Void\";\n    }\n    return \"SchemaField.Markup\";\n  };\n  const printNode = (node: TreeNode) => {\n    if (!node) {\n      return \"\";\n    }\n    return `<${printTag(node)} ${printAttribute(node)} ${node.children.length ? `>${printChildren(node)}</${printTag(node)}>` : \"/>\"}`;\n  };\n  const root = tree.find(child => {\n    return child.componentName === \"Form\" || child.componentName === \"Root\";\n  });\n  return `import React, { useMemo } from 'react'\nimport { createForm } from '@formily/core'\nimport { createSchemaField } from '@formily/react'\nimport {\n  Form,\n  FormItem,\n  DatePicker,\n  Checkbox,\n  Cascader,\n  Editable,\n  Input,\n  NumberPicker,\n  Switch,\n  Password,\n  PreviewText,\n  Radio,\n  Reset,\n  Select,\n  Space,\n  Submit,\n  TimePicker,\n  Transfer,\n  TreeSelect,\n  Upload,\n  FormGrid,\n  FormLayout,\n  FormTab,\n  FormCollapse,\n  ArrayTable,\n  ArrayCards,\n} from '@formily/antd'\nimport { Card, Slider, Rate } from 'antd'\n\nconst Text: React.FC<{\n  value?: string\n  content?: string\n  mode?: 'normal' | 'h1' | 'h2' | 'h3' | 'p'\n}> = ({ value, mode, content, ...props }) => {\n  const tagName = mode === 'normal' || !mode ? 'div' : mode\n  return React.createElement(tagName, props, value || content)\n}\n\nconst SchemaField = createSchemaField({\n  components: {\n    Space,\n    FormGrid,\n    FormLayout,\n    FormTab,\n    FormCollapse,\n    ArrayTable,\n    ArrayCards,\n    FormItem,\n    DatePicker,\n    Checkbox,\n    Cascader,\n    Editable,\n    Input,\n    Text,\n    NumberPicker,\n    Switch,\n    Password,\n    PreviewText,\n    Radio,\n    Reset,\n    Select,\n    Submit,\n    TimePicker,\n    Transfer,\n    TreeSelect,\n    Upload,\n    Card,\n    Slider,\n    Rate,\n  },\n})\n\nexport default ()=>{\n  const form = useMemo(() => createForm(), [])\n\n  return <Form form={form} ${printAttribute(root)}>\n    <SchemaField>\n      ${printChildren(root)}\n    </SchemaField>\n  </Form>\n}\n  \n`;\n};\n\nexport const MarkupSchemaWidget: React.FC<IMarkupSchemaWidgetProps> = props => {\n  return <MonacoInput {...props} options={{ readOnly: true }} value={transformToMarkupSchemaCode(props.tree)} language=\"typescript\" />;\n};\n","import React from \"react\";\nimport { observer } from \"@formily/reactive-react\";\nimport { DroppableWidget } from \"@designable/react\";\nimport \"./styles.less\";\n\nexport const Container: React.FC = observer(props => {\n  return <DroppableWidget>{props.children}</DroppableWidget>;\n});\n\nexport const withContainer = (Target: any) => {\n  const Component = (props: any) => {\n    return (\n      <DroppableWidget>\n        <Target {...props} />\n      </DroppableWidget>\n    );\n  };\n\n  return (props: any) => <Component {...props} />;\n};\n","export const Component = {\n  \"ru-RU\": {\n    settings: {\n      style: {\n        width: \"Ширина\",\n        height: \"Высота\",\n        display: \"Отображение\",\n        background: \"Фон\",\n        boxShadow: \"Тень\",\n        font: \"Шрифт\",\n        margin: \"Внешний отступ\",\n        padding: \"Внутренний отступ\",\n        borderRadius: \"Радиус закругления\",\n        border: \"Граница\",\n        opacity: \"Непрозрачность\",\n      },\n    },\n  },\n  \"en-US\": {\n    settings: {\n      style: {\n        width: \"Width\",\n        height: \"Height\",\n        display: \"Display\",\n        background: \"Background\",\n        boxShadow: \"Box Shadow\",\n        font: \"Font\",\n        margin: \"Margin\",\n        padding: \"Padding\",\n        borderRadius: \"Radius\",\n        border: \"Border\",\n        opacity: \"Opacity\",\n      },\n    },\n  },\n};\n","export const Field = {\n  \"ru-RU\": {\n    settings: {\n      name: \"Имя\",\n      title: \"Заголовок\",\n      required: \"Обязательное\",\n      description: \"Описание\",\n      default: \"Значение по умолчанию\",\n      enum: \"Опции\",\n      \"x-display\": {\n        title: \"Состояние отображения\",\n        tooltip:\n          \"Когда отображаемое значение равно Отсутствует, данные будут «Скрытыми» и удалены. Когда отображаемое значение скрыто, будет скрыт только пользовательский интерфейс.\",\n        dataSource: [\"Видимый\", \"Скрытый\", \"Отсутствует\", \"Наследуемое\"],\n      },\n      \"x-pattern\": {\n        title: \"UI шаблон\",\n        dataSource: [\"Редактируемый\", \"Недоступный\", \"Только чтение\", \"Удобочитаемое\", \"Наследуемое\"],\n      },\n      \"x-validator\": \"Валидатор\",\n      \"x-decorator\": \"Декоратор\",\n      \"x-reactions\": \"Реакции\",\n      \"field-group\": \"Свойства поля\",\n      \"component-group\": \"Свойства компонента\",\n      \"decorator-group\": \"Свойства декоратора\",\n      \"component-style-group\": \"Стиль компонента\",\n      \"decorator-style-group\": \"Стиль декоратора\",\n      \"x-component-props\": {\n        size: {\n          title: \"Размер\",\n          dataSource: [\"Большой\", \"Маленький\", \"По умолчанию\", \"Наследуемое\"],\n        },\n        allowClear: \"Разрешить очистить\",\n        autoFocus: \"Автофокус\",\n        showSearch: \"Показать поиск\",\n        notFoundContent: \"Контент не найден\",\n        bordered: \"Окаймленный\",\n        placeholder: \"Плейсхолдер\",\n        style: {\n          width: \"Ширина\",\n          height: \"Высота\",\n          display: \"Отображение\",\n          background: \"Фон\",\n          boxShadow: \"Тень\",\n          font: \"Шрифт\",\n          margin: \"Внешний отступ\",\n          padding: \"Внутренний отступ\",\n          borderRadius: \"Радиус закругления\",\n          border: \"Граница\",\n          opacity: \"Непрозрачность\",\n        },\n      },\n      \"x-decorator-props\": {\n        addonAfter: \"Добавление после\",\n        addonBefore: \"Добавление до\",\n        tooltip: \"Подсказка\",\n        asterisk: \"Звездочка\",\n        gridSpan: \"Диапазон сетки\",\n        labelCol: \"Именование колонки\",\n        wrapperCol: \"Обертка колонки\",\n        colon: \"Двоеточие\",\n        labelAlign: {\n          title: \"Выравнивание именования\",\n          dataSource: [\"Слева\", \"Справа\", \"Наследуемое\"],\n        },\n        wrapperAlign: {\n          title: \"Выравнивание обертки\",\n          dataSource: [\"Слева\", \"Справа\", \"Наследуемое\"],\n        },\n        labelWrap: \"Перенос наименования\",\n        wrapperWrap: \"Перенос обертки\",\n        labelWidth: \"Ширина наименования\",\n        wrapperWidth: \"Ширина обертки\",\n        fullness: \"Полнота\",\n        inset: \"Вставка\",\n        shallow: \"Мелкий\",\n        bordered: \"Окаймленный\",\n        size: {\n          title: \"Размер\",\n          dataSource: [\"Большой\", \"Маленький\", \"По умолчанию\", \"Наследуемое\"],\n        },\n        layout: {\n          title: \"Макет\",\n          dataSource: [\"Вертикальный\", \"Горизонтальный\", \"Линейный\", \"Наследуемое\"],\n        },\n        feedbackLayout: {\n          title: \"Макет обратной связи\",\n          dataSource: [\"Свободный\", \"Сжатый\", \"Всплывающий\", \"Не установлено\", \"Наследуемое\"],\n        },\n        tooltipLayout: {\n          title: \"Макет всплывающей подсказки\",\n          dataSource: [\"Значок\", \"Текст\", \"Наследуемое\"],\n        },\n        style: {\n          width: \"Ширина\",\n          height: \"Высота\",\n          display: \"Отображение\",\n          background: \"Фон\",\n          boxShadow: \"Тень\",\n          font: \"Шрифт\",\n          margin: \"Внешний отступ\",\n          padding: \"Внутренний отступ\",\n          borderRadius: \"Радиус закругления\",\n          border: \"Граница\",\n          opacity: \"Непрозрачность\",\n        },\n      },\n    },\n  },\n  \"en-US\": {\n    settings: {\n      name: \"Name\",\n      title: \"Title\",\n      required: \"Required\",\n      description: \"Description\",\n      default: \"Default\",\n      enum: \"Options\",\n      \"x-display\": {\n        title: \"Display State\",\n        tooltip:\n          'When the display value is \"None\", the data will be \"Hidden\" and deleted. When the display value is hidden, only the UI will be hidden',\n        dataSource: [\"Visible\", \"Hidden\", \"None\", \"Inherit\"],\n      },\n      \"x-pattern\": {\n        title: \"UI Pattern\",\n        dataSource: [\"Editable\", \"Disabled\", \"ReadOnly\", \"ReadPretty\", \"Inherit\"],\n      },\n      \"x-validator\": \"Validator\",\n      \"x-decorator\": \"Decorator\",\n      \"x-reactions\": \"Reactions\",\n      \"field-group\": \"Field Properties\",\n      \"component-group\": \"Component Properties\",\n      \"decorator-group\": \"Decorator Properties\",\n      \"component-style-group\": \"Component Style\",\n      \"decorator-style-group\": \"Decorator Style\",\n      \"x-component-props\": {\n        size: {\n          title: \"Size\",\n          dataSource: [\"Large\", \"Small\", \"Default\", \"Inherit\"],\n        },\n        allowClear: \"Allow Clear\",\n        autoFocus: \"Auto Focus\",\n        showSearch: \"Show Search\",\n        notFoundContent: \"Not Found Content\",\n        bordered: \"Bordered\",\n        placeholder: \"Placeholder\",\n        style: {\n          width: \"Width\",\n          height: \"Height\",\n          display: \"Display\",\n          background: \"Background\",\n          boxShadow: \"Box Shadow\",\n          font: \"Font\",\n          margin: \"Margin\",\n          padding: \"Padding\",\n          borderRadius: \"Radius\",\n          border: \"Border\",\n          opacity: \"Opacity\",\n        },\n      },\n      \"x-decorator-props\": {\n        addonAfter: \"Addon After\",\n        addonBefore: \"Addon Before\",\n        tooltip: \"Tooltip\",\n        asterisk: \"Asterisk\",\n        gridSpan: \"Grid Span\",\n        labelCol: \"Label Col\",\n        wrapperCol: \"Wrapper Col\",\n        colon: \"Colon\",\n        labelAlign: {\n          title: \"Label Align\",\n          dataSource: [\"Left\", \"Right\", \"Inherit\"],\n        },\n        wrapperAlign: {\n          title: \"Wrapper Align\",\n          dataSource: [\"Left\", \"Right\", \"Inherit\"],\n        },\n        labelWrap: \"Label Wrap\",\n        wrapperWrap: \"Wrapper Wrap\",\n        labelWidth: \"Label Width\",\n        wrapperWidth: \"Wrapper Width\",\n        fullness: \"Fullness\",\n        inset: \"Inset\",\n        shallow: \"Shallow\",\n        bordered: \"Bordered\",\n        size: {\n          title: \"Size\",\n          dataSource: [\"Large\", \"Small\", \"Default\", \"Inherit\"],\n        },\n        layout: {\n          title: \"Layout\",\n          dataSource: [\"Vertical\", \"Horizontal\", \"Inline\", \"Inherit\"],\n        },\n        feedbackLayout: {\n          title: \"Feedback Layout\",\n          dataSource: [\"Loose\", \"Terse\", \"Popup\", \"None\", \"Inherit\"],\n        },\n        tooltipLayout: {\n          title: \"Tooltip Layout\",\n          dataSource: [\"Icon\", \"Text\", \"Inherit\"],\n        },\n        style: {\n          width: \"Width\",\n          height: \"Height\",\n          display: \"Display\",\n          background: \"Background\",\n          boxShadow: \"Box Shadow\",\n          font: \"Font\",\n          margin: \"Margin\",\n          padding: \"Padding\",\n          borderRadius: \"Radius\",\n          border: \"Border\",\n          opacity: \"Opacity\",\n        },\n      },\n    },\n  },\n};\n","export const Input = {\n  \"ru-RU\": {\n    title: \"Поле ввода\",\n    settings: {\n      \"x-component-props\": {\n        addonAfter: \"Добавление после\",\n        addonBefore: \"Добавление до\",\n        maxLength: \"Максимальная длина\",\n        prefix: \"Префикс\",\n        suffix: \"Суффикс\",\n        autoSize: {\n          title: \"Авто высота\",\n          tooltip: \"Может быть установлено значение true | false или объект: {minRows: 2, maxRows: 6}\",\n        },\n        showCount: \"Показать кол. символов\",\n        checkStrength: \"Проверить количество\",\n      },\n    },\n  },\n  \"en-US\": {\n    title: \"Input\",\n    settings: {\n      \"x-component-props\": {\n        addonAfter: \"Addon After\",\n        addonBefore: \"Addon Before\",\n        maxLength: \"Max Length\",\n        prefix: \"Prefix\",\n        suffix: \"Suffix\",\n        autoSize: \"Auto Size\",\n        showCount: \"Show Count\",\n        checkStrength: \"Check Strength\",\n      },\n    },\n  },\n};\n","export const Select = {\n  \"ru-RU\": {\n    title: \"Выпадающий список\",\n    settings: {\n      \"x-component-props\": {\n        mode: {\n          title: \"Режим\",\n          dataSource: [\"Несколько значений\", \"Теги\", \"Одно значение\"],\n        },\n        autoClearSearchValue: {\n          title: \"Автоматически очистить значение поиска\",\n          tooltip: \"Используется только для режима множественных и тегов\",\n        },\n        defaultActiveFirstOption: \"По умолчанию активная первая опция\",\n        dropdownMatchSelectWidth: \"Ширина выпадающего списка\",\n        defaultOpen: \"Открыто по умолчанию\",\n        filterOption: \"Опция фильтрации\",\n        filterSort: \"Сортировка\",\n        labelInValue: {\n          title: \"Наименование в значении\",\n          tooltip:\n            \"Следует ли обернуть метку каждой опции в значение, это изменит значение Тип выбора из строки на Формат {значение: строка, метка: ReactNode}\",\n        },\n        listHeight: \"Высота списка\",\n        maxTagCount: {\n          title: \"Максимальное количество тегов\",\n          tooltip: \"Сколько тегов отображается максимально, адаптивный режим будет стоить производительности\",\n        },\n        maxTagPlaceholder: {\n          title: \"Макс. тег плейсхолдер\",\n          tooltip: \"Содержимое отображается, когда тег скрыт\",\n        },\n        maxTagTextLength: \"Максимальная длина текста тега\",\n        showArrow: \"Показать стрелку\",\n        virtual: \"Использовать виртуальную прокрутку\",\n      },\n    },\n  },\n  \"en-US\": {\n    title: \"Select\",\n    settings: {\n      \"x-component-props\": {\n        mode: {\n          title: \"Mode\",\n          dataSource: [\"Multiple\", \"Tags\", \"Single\"],\n        },\n        autoClearSearchValue: {\n          title: \"Auto Clear Search Value\",\n          tooltip: \"Only used to multiple and tags mode\",\n        },\n        defaultActiveFirstOption: \"Default Active First Option\",\n        dropdownMatchSelectWidth: \"Dropdown Match Select Width\",\n        defaultOpen: \"Default Open\",\n        filterOption: \"Filter Option\",\n        filterSort: \"Filter Sort\",\n        labelInValue: \"label InValue\",\n        listHeight: \"List Height\",\n        maxTagCount: \"Max Tag Count\",\n        maxTagPlaceholder: {\n          title: \"Max Tag Placeholder\",\n          tooltip: \"Content displayed when tag is hidden\",\n        },\n        maxTagTextLength: \"Max Tag Text Length\",\n        showArrow: \"Show Arrow\",\n        virtual: \"Use Virtual Scroll\",\n      },\n    },\n  },\n};\n","export const TextArea = {\n  \"ru-RU\": {\n    title: \"Текстовая область\",\n    settings: {\n      \"x-component-props\": {\n        maxLength: \"Максимальная длина\",\n        autoSize: {\n          title: \"Авто размер\",\n          tooltip: \"Может быть установлено значение true | false или объект: {minRows: 2, maxRows: 6}\",\n        },\n        showCount: \"Показать количество символов\",\n      },\n    },\n  },\n  \"en-US\": {\n    title: \"TextArea\",\n    settings: {\n      \"x-component-props\": {\n        maxLength: \"Max Length\",\n        autoSize: \"Auto Size\",\n        showCount: \"Show Count\",\n      },\n    },\n  },\n};\n","export const TreeSelect = {\n  \"ru-RU\": {\n    title: \"Древовидный выбор\",\n    settings: {\n      \"x-component-props\": {\n        mode: {\n          title: \"Режим\",\n          dataSource: [\"Несколько значений\", \"Теги\", \"Одно значение\"],\n        },\n        autoClearSearchValue: {\n          title: \"Автоматически очищать значение поиска\",\n          tooltip: \"Используется только для режима множественных и тегов\",\n        },\n        defaultActiveFirstOption: \"По умолчанию активная первая опция\",\n        defaultOpen: \"По умолчанию открыто\",\n        filterOption: \"Фильтровать опции\",\n        filterSort: \"Сортировать\",\n        labelInValue: {\n          title: \"Показывать метку в значении\",\n          tooltip:\n            \"Следует ли обернуть метку каждой опции в значение, это изменит значение Тип выбора из строки на Формат {значение: строка, метка: ReactNode}\",\n        },\n        listHeight: \"Высота списка\",\n        maxTagCount: {\n          title: \"Максимальное количество тегов\",\n          tooltip: \"Если количество тегов больше этого значения, они будут отфильтрованы\",\n        },\n        maxTagPlaceholder: {\n          title: \"Макс. тег плейсхолдер\",\n          tooltip: \"Содержимое отображается, когда тег скрыт\",\n        },\n        maxTagTextLength: \"Максимальная длина текста тега\",\n        showArrow: \"Показывать стрелку\",\n        virtual: \"Виртуальный\",\n        dropdownMatchSelectWidth: {\n          title: \"Совпадение ширины списка\",\n          tooltip:\n            \"По умолчанию будет установлена минимальная ширина, и она будет игнорироваться, если значение меньше ширины поля выбора. false отключит виртуальную прокрутку\",\n        },\n        showCheckedStrategy: {\n          title: \"Стратегия показа отмеченных\",\n          tooltip:\n            \"При настройке treeCheckable определите, как заполнять выбранный элемент. TreeSelect.SHOW_ALL: Показать все выбранные узлы (включая родительские узлы). TreeSelect.SHOW_PARENT: отображать только родительский узел (когда выбраны все дочерние узлы под родительским узлом). Показывать только дочерние узлы по умолчанию\",\n          dataSource: [\"Показать все\", \"Показать родительский узел\", \"Показать дочерние узлы\"],\n        },\n        treeCheckable: \"Можно ли выбирать узлы\",\n        treeDefaultExpandAll: \"По умолчанию все узлы раскрыты\",\n        treeDefaultExpandedKeys: {\n          title: \"Ключи по умолчанию раскрытых узлов\",\n          tooltip: \"Формат：Array<string | number>\",\n        },\n        treeNodeFilterProp: {\n          title: \"Свойство узла для фильтрации\",\n          tooltip: \"Атрибут treeNode, соответствующий входному фильтру элемента\",\n        },\n        treeDataSimpleMode: {\n          title: \"Простой режим\",\n          tooltip: `Используйте treeData в простом формате. Для конкретных настроек обратитесь к устанавливаемому типу (treeData должен быть структурой данных, подобной этой: [{id:1, pId:0, value:'1', title:\"test1\",...},... ], pId — это идентификатор родительского узла)`,\n        },\n        treeNodeLabelProp: {\n          title: \"Свойство узла для отображения метки\",\n          tooltip: \"The default is title\",\n        },\n        filterTreeNode: \"Фильтровать узлы\",\n      },\n    },\n  },\n  \"en-US\": {\n    title: \"TreeSelect\",\n    settings: {\n      \"x-component-props\": {\n        mode: {\n          title: \"Mode\",\n          dataSource: [\"Multiple\", \"Tags\", \"Single\"],\n        },\n        autoClearSearchValue: {\n          title: \"Auto Clear Search Value\",\n          tooltip: \"Only used to multiple and tags mode\",\n        },\n        defaultActiveFirstOption: \"Default Active First Option\",\n        defaultOpen: \"Default Open\",\n        filterOption: \"Filter Option\",\n        filterSort: \"Filter Sort\",\n        labelInValue: \"Label In Value\",\n        listHeight: \"List Height\",\n        maxTagCount: \"Max Tag Count\",\n        maxTagPlaceholder: {\n          title: \"Max Tag Placeholder\",\n          tooltip: \"Content displayed when tag is hidden\",\n        },\n        maxTagTextLength: \"Max Tag Text Length\",\n        notFoundContent: \"Not Found Content\",\n        showArrow: \"Show Arrow\",\n        virtual: \"Use Virtual Scroll\",\n        dropdownMatchSelectWidth: {\n          title: \"Dropdown Match Select Width\",\n          tooltip:\n            \"By default, min-width will be set, and it will be ignored when the value is less than the width of the selection box. false will turn off virtual scrolling\",\n        },\n        showCheckedStrategy: {\n          title: \"Show Checked Strategy\",\n          tooltip:\n            \"When configuring treeCheckable, define how to backfill the selected item. TreeSelect.SHOW_ALL: Show all selected nodes (including parent nodes). TreeSelect.SHOW_PARENT: Only display the parent node (when all child nodes under the parent node are selected). Only show child nodes by default\",\n          dataSource: [\"Show All\", \"Show Parent Node\", \"Show Child Nodes\"],\n        },\n        treeCheckable: \"Tree Checkable\",\n        treeDefaultExpandAll: \"Tree Default Expand All\",\n        treeDefaultExpandedKeys: {\n          title: \"Tree Default Expanded Keys\",\n          tooltip: \"Format：Array<string | number>\",\n        },\n        treeNodeFilterProp: {\n          title: \"Tree Node Filter Properties\",\n          tooltip: \"The treeNode attribute corresponding to the input item filter\",\n        },\n        treeDataSimpleMode: {\n          title: \"Tree Data Simple Mode\",\n          tooltip: `Use treeData in a simple format. For specific settings, refer to the settable type (the treeData should be a data structure like this: [{id:1, pId:0, value:'1', title:\"test1\",...} ,...], pId is the id of the parent node)`,\n        },\n        treeNodeLabelProp: {\n          title: \"Tree Node Label Properties\",\n          tooltip: \"The default is title\",\n        },\n        filterTreeNode: \"Filter Tree Node\",\n      },\n    },\n  },\n};\n","export const Cascader = {\n  \"ru-RU\": {\n    title: \"Каскад\",\n    settings: {\n      \"x-component-props\": {\n        changeOnSelect: {\n          title: \"Изменить при выборе\",\n          tooltip: \"Щелкните на каждом уровне меню и значение параметра изменится.\",\n        },\n        displayRender: {\n          title: \"Визуализация\",\n          tooltip: 'Функция рендеринга, отображаемая после выбора, по умолчанию — label => label.join(\"/\") ',\n        },\n        fieldNames: {\n          title: \"Имена полей\",\n          tooltip: 'Значение по умолчанию：{ label: \"label\", value: \"value\", children: \"children\" }',\n        },\n      },\n    },\n  },\n  \"en-US\": {\n    title: \"Cascader\",\n    settings: {\n      \"x-component-props\": {\n        changeOnSelect: {\n          title: \"Change On Select\",\n          tooltip: \"Click on each level of menu option value will change\",\n        },\n        displayRender: {\n          title: \"Display Render\",\n          tooltip: 'The rendering function displayed after selection, the default is label => label.join(\"/\")\t',\n        },\n        fieldNames: {\n          title: \"Field Names\",\n          tooltip: 'Defaults：{ label: \"label\", value: \"value\", children: \"children\" }',\n        },\n      },\n    },\n  },\n};\n","export const RadioGroup = {\n  \"ru-RU\": {\n    title: \"Радио\",\n    settings: {\n      \"x-component-props\": {\n        buttonStyle: {\n          title: \"Стиль кнопки\",\n          dataSource: [\"Пустая\", \"Сплошная\"],\n        },\n        optionType: {\n          title: \"Тип опции\",\n          dataSource: [\"По умолчанию\", \"Кнопка\"],\n        },\n      },\n    },\n  },\n  \"en-US\": {\n    title: \"Radio\",\n    settings: {\n      \"x-component-props\": {\n        buttonStyle: { title: \"Button style\", dataSource: [\"Hollow\", \"Solid\"] },\n        optionType: { title: \"Option type\", dataSource: [\"Default\", \"Button\"] },\n      },\n    },\n  },\n};\n","export const CheckboxGroup = {\n  \"ru-RU\": {\n    title: \"Чекбокс\",\n  },\n  \"en-US\": {\n    title: \"Checkbox\",\n  },\n};\n","export const Slider = {\n  \"ru-RU\": {\n    title: \"Слайдер\",\n    settings: {\n      \"x-component-props\": {\n        dots: \"Фиксированная шкала\",\n        range: \"Двойной слайдер\",\n        reverse: \"Обратная система координат\",\n        vertical: \"Вертикальный\",\n        tooltipPlacement: {\n          title: \"Размещение подсказки\",\n          tooltip: \"Настройка быстрого размещения. Справочная подсказка\",\n        },\n        tooltipVisible: {\n          title: \"Подсказка видна\",\n          tooltip:\n            \"При включении всегда будет отображаться подсказка; иначе он всегда не будет отображаться, даже при перетаскивании и перемещении\",\n        },\n        max: \"Максимум\",\n        min: \"Минимум\",\n        step: \"Шаг\",\n        marks: \"Метки\",\n      },\n    },\n  },\n  \"en-US\": {\n    title: \"Slider\",\n    settings: {\n      \"x-component-props\": {\n        dots: \"Fixed Scale\",\n        range: \"Double Slider\",\n        reverse: \"Reverse Coordinate System\",\n        vertical: \"Vertical\",\n        tooltipPlacement: {\n          title: \"Tooltip Placement\",\n          tooltip: \"Set up prompt placement. Reference Tooltip\",\n        },\n        tooltipVisible: {\n          title: \"Tooltip Visible\",\n          tooltip:\n            \"When turned on, the prompt will always be displayed; otherwise, it will always not be displayed, even when dragging and moving in\",\n        },\n        max: \"Max\",\n        min: \"Min\",\n        step: \"Step\",\n        marks: \"Marks\",\n      },\n    },\n  },\n};\n","export const Rate = {\n  \"ru-RU\": {\n    title: \"Оценка\",\n    settings: {\n      \"x-component-props\": {\n        allowHalf: \"Разрешить половинчатые значения\",\n        tooltips: { title: \"Подсказка\", tooltip: \"Формат：string[]\" },\n        count: \"Количество\",\n      },\n    },\n  },\n  \"en-US\": {\n    title: \"Rate\",\n    settings: {\n      \"x-component-props\": {\n        allowHalf: \"Allow Half\",\n        tooltips: { title: \"Tooltips\", tooltip: \"Format：string[]\" },\n        count: \"Count\",\n      },\n    },\n  },\n};\n","import { createLocales } from \"@designable/core\";\n\nexport const DatePicker = {\n  \"ru-RU\": {\n    title: \"Выбор даты\",\n    settings: {\n      \"x-component-props\": {\n        disabledDate: {\n          title: \"Заблокировать дату\",\n          tooltip: \"Формат (currentDate: moment) => boolean\",\n        },\n        disabledTime: {\n          title: \"Заблокировать время\",\n          tooltip: \"Формат (currentDate: moment) => boolean\",\n        },\n        inputReadOnly: \"Только для чтения\",\n        format: \"Формат\",\n        picker: {\n          title: \"Тип выбора\",\n          dataSource: [\"время\", \"дата\", \"месяц\", \"год\", \"квартал\", \"десятилетие\"],\n        },\n        showNow: \"Показать сейчас\",\n        showTime: \"Показать время\",\n        showToday: \"Показать сегодня\",\n      },\n    },\n  },\n  \"en-US\": {\n    title: \"DatePicker\",\n    settings: {\n      \"x-component-props\": {\n        disabledDate: {\n          title: \"Disabled Date\",\n          tooltip: \"Format (currentDate: moment) => boolean\",\n        },\n        disabledTime: {\n          title: \"Disabled Time\",\n          tooltip: \"Format (currentDate: moment) => boolean\",\n        },\n        inputReadOnly: \"Input ReadOnly\",\n        format: \"Format\",\n        picker: {\n          title: \"Picker Type\",\n          dataSource: [\"Time\", \"Date\", \"Month\", \"Year\", \"Quarter\", \"Decade\"],\n        },\n        showNow: \"Show Now\",\n        showTime: \"Show Time\",\n        showToday: \"Show Today\",\n      },\n    },\n  },\n};\n\nexport const DateRangePicker = createLocales(DatePicker, {\n  \"ru-RU\": {\n    title: \"Диапазон дат\",\n  },\n  \"en-US\": {\n    title: \"DateRange\",\n  },\n});\n","import { createLocales } from \"@designable/core\";\nimport { DatePicker } from \"./DatePicker\";\n\nexport const TimePicker = createLocales(DatePicker, {\n  \"ru-RU\": {\n    title: \"Выбор времени\",\n    settings: {\n      \"x-component-props\": {\n        clearText: \"Очистка текста\",\n        disabledHours: \"Отключить часы\",\n        disabledMinutes: \"Отключить минуты\",\n        disabledSeconds: \"Отключить секунды\",\n        hideDisabledOptions: \"Скрыть отключенные параметры\",\n        hourStep: \"Шаг часов\",\n        minuteStep: \"Шаг минут\",\n        secondStep: \"Шаг секунд\",\n        use12Hours: \"Использовать 12-часовой формат\",\n        inputReadOnly: \"Поле только для чтения\",\n        showNow: \"Показать сейчас\",\n        format: \"Формат\",\n      },\n    },\n  },\n  \"en-US\": {\n    title: \"Time Picker\",\n    settings: {\n      \"x-component-props\": {\n        clearText: \"Clear Text\",\n        disabledHours: \"Disbaled Hours\",\n        disabledMinutes: \"Disabled Minutes\",\n        disabledSeconds: \"Disabled Seconds\",\n        hideDisabledOptions: \"Hide Disabled Options\",\n        hourStep: \"Hour Step\",\n        minuteStep: \"Minute Step\",\n        secondStep: \"Second Step\",\n        use12Hours: \"Use 12-hour\",\n        inputReadOnly: \"Input ReadOnly\",\n        showNow: \"Show Now\",\n        format: \"Format\",\n      },\n    },\n  },\n});\n\nexport const TimeRangePicker = createLocales(TimePicker, {\n  \"ru-RU\": {\n    title: \"Временной интервал\",\n  },\n  \"en-US\": {\n    title: \"Time Range\",\n  },\n});\n","export const NumberPicker = {\n  \"ru-RU\": {\n    title: \"Поле ввода числа\",\n    settings: {\n      \"x-component-props\": {\n        formatter: {\n          title: \"Конвертер форматов\",\n          tooltip: \"Формат：function(value: number | string): string\",\n        },\n        keyboard: \"Включить сочетания клавиш\",\n        parser: {\n          title: \"Парсер форматов\",\n          tooltip:\n            \"Укажите метод обратного преобразования в числа из преобразователя формата и используйте его с преобразователем формата, формат: function(string): number\",\n        },\n        decimalSeparator: \"Десятичный разделитель\",\n        precision: \"Точность\",\n        max: \"Максимум\",\n        min: \"Минимум\",\n        step: \"Шаг\",\n        stringMode: {\n          title: \"Строковый формат\",\n          tooltip: \"Поддержка высокоточных десятичных знаков после открытия. В то же время onChange вернет строковый тип\",\n        },\n      },\n    },\n  },\n  \"en-US\": {\n    title: \"NumberInput\",\n    settings: {\n      \"x-component-props\": {\n        formatter: {\n          title: \"Format Converter\",\n          tooltip: \"Format：function(value: number | string): string\",\n        },\n        keyboard: \"Enable Shortcut Keys\",\n        parser: {\n          title: \"Format Parser\",\n          tooltip:\n            \"Specify the method of converting back to numbers from the format converter, and use it with the format converter, the format:function(string): number\",\n        },\n        decimalSeparator: \"Decimal Separator\",\n        precision: \"Precision\",\n        max: \"Max\",\n        min: \"Min\",\n        step: \"Step\",\n        stringMode: {\n          title: \"String Format\",\n          tooltip: \"Support high-precision decimals after opening. At the same time onChange will return string type\",\n        },\n      },\n    },\n  },\n};\n","import { createLocales } from \"@designable/core\";\nimport { Input } from \"./Input\";\n\nexport const Password = createLocales(Input, {\n  \"ru-RU\": {\n    title: \"Пароль\",\n  },\n  \"en-US\": {\n    title: \"Password\",\n  },\n});\n","export const Transfer = {\n  \"ru-RU\": {\n    title: \"Свитч\",\n    settings: {\n      \"x-component-props\": {\n        oneWay: \"Одностороннее движение\",\n        operations: { title: \"Операции\", tooltip: \"Формат：string[]\" },\n        titles: { title: \"Заголовки\", tooltip: \"Формат：string[]\" },\n        showSearchAll: \"Показать поиск всех\",\n        filterOption: \"Фильтрация опций\",\n      },\n    },\n  },\n  \"en-US\": {\n    title: \"Transfer\",\n    settings: {\n      \"x-component-props\": {\n        oneWay: \"One Way\",\n        operations: { title: \"Operations\", tooltip: \"Format：string[]\" },\n        titles: { title: \"Titles\", tooltip: \"Format：string[]\" },\n        showSearchAll: \"Show Search All\",\n        filterOption: \"Filter Option\",\n      },\n    },\n  },\n};\n","import { createLocales } from \"@designable/core\";\n\nexport const Upload = {\n  \"ru-RU\": {\n    title: \"Загрузка\",\n    settings: {\n      \"x-component-props\": {\n        accept: \"Принимаемые типы файлов\",\n        action: \"Действие\",\n        data: \"Данные\",\n        directory: \"Директория\",\n        headers: \"Заголовки\",\n        listType: {\n          title: \"Тип списка\",\n          dataSource: [\"Текст\", \"Изображение\", \"Карточка\"],\n        },\n        multiple: \"Множественная загрузка\",\n        name: \"Имя\",\n        openFileDialogOnClick: {\n          title: \"Открыть диалоговое окно при клике\",\n        },\n        showUploadList: \"Показать список загрузки\",\n        withCredentials: \"Передавать cookies\",\n        maxCount: \"Максимальное количество файлов\",\n        method: \"Метод\",\n        textContent: \"Текстовое содержимое\",\n      },\n    },\n  },\n  \"en-US\": {\n    title: \"Upload\",\n    settings: {\n      \"x-component-props\": {\n        accept: \"Accept\",\n        action: \"Upload Address\",\n        data: \"Data\",\n        directory: \"Support Upload Directory\",\n        headers: \"Headers\",\n        listType: { title: \"List Type\", dataSource: [\"Text\", \"Image\", \"Card\"] },\n        multiple: \"Multiple\",\n        name: \"Name\",\n        openFileDialogOnClick: \"Open File Dialog On Click\",\n        showUploadList: \"Show Upload List\",\n        withCredentials: \"withCredentials\",\n        maxCount: \"Max Count\",\n        method: \"Method\",\n        textContent: \"Text Content\",\n      },\n    },\n  },\n};\n\nexport const UploadDragger = createLocales(Upload, {\n  \"ru-RU\": {\n    title: \"Загрузка DnD\",\n    settings: {\n      \"x-component-props\": {},\n    },\n  },\n  \"en-US\": {\n    title: \"UploadDragger\",\n    settings: {\n      \"x-component-props\": {},\n    },\n  },\n});\n","export const Switch = {\n  \"ru-RU\": {\n    title: \"Выключатель\",\n  },\n  \"en-US\": {\n    title: \"Switch\",\n  },\n};\n","export const ObjectLocale = {\n  \"ru-RU\": {\n    title: \"Объект\",\n  },\n  \"en-US\": {\n    title: \"Object\",\n  },\n};\n","import { createLocales } from \"@designable/core\";\nimport { Component } from \"./Component\";\n\nexport const Form = createLocales(Component, {\n  \"ru-RU\": {\n    title: \"Форма\",\n    settings: {\n      labelCol: \"Наименование колонки\",\n      wrapperCol: \"Обертка колонки\",\n      colon: \"Двоеточие\",\n      labelAlign: {\n        title: \"Выравнивание наименования\",\n        dataSource: [\"Слева\", \"Справа\", \"Наследование\"],\n      },\n      wrapperAlign: {\n        title: \"Выравнивание обертки\",\n        dataSource: [\"Слева\", \"Справа\", \"Наследование\"],\n      },\n      labelWrap: \"Перенос наименования\",\n      wrapperWrap: \"Перенос обертки\",\n      labelWidth: \"Ширина наименования\",\n      wrapperWidth: \"Ширина обертки\",\n      fullness: \"Полнота\",\n      inset: \"Вставка\",\n      shallow: \"Мелкий\",\n      bordered: \"Обрамленный\",\n      size: {\n        title: \"Размер\",\n        dataSource: [\"Большой\", \"Маленький\", \"По умолчанию\", \"Наследование\"],\n      },\n      layout: {\n        title: \"Макет\",\n        dataSource: [\"Вертикальный\", \"Горизонтальный\", \"Линейный\", \"Наследование\"],\n      },\n      feedbackLayout: {\n        title: \"Макет обратной связи\",\n        dataSource: [\"Свободный\", \"Сжатый\", \"Всплывающий\", \"Не установлено\", \"Наследование\"],\n      },\n      tooltipLayout: {\n        title: \"Макет подсказки\",\n        dataSource: [\"Значок\", \"Текст\", \"Наследование\"],\n      },\n    },\n  },\n  \"en-US\": {\n    title: \"Form\",\n    settings: {\n      labelCol: \"Label Col\",\n      wrapperCol: \"Wrapper Col\",\n      colon: \"Colon\",\n      labelAlign: {\n        title: \"Label Align\",\n        dataSource: [\"Left\", \"Right\", \"Inherit\"],\n      },\n      wrapperAlign: {\n        title: \"Wrapper Align\",\n        dataSource: [\"Left\", \"Right\", \"Inherit\"],\n      },\n      labelWrap: \"Label Wrap\",\n      wrapperWrap: \"Wrapper Wrap\",\n      labelWidth: \"Label Width\",\n      wrapperWidth: \"Wrapper Width\",\n      fullness: \"Fullness\",\n      inset: \"Inset\",\n      shallow: \"Shallow\",\n      bordered: \"Bordered\",\n      size: {\n        title: \"Size\",\n        dataSource: [\"Large\", \"Small\", \"Default\", \"Inherit\"],\n      },\n      layout: {\n        title: \"Layout\",\n        dataSource: [\"Vertical\", \"Horizontal\", \"Inline\", \"Inherit\"],\n      },\n      feedbackLayout: {\n        title: \"Feedback Layout\",\n        dataSource: [\"Loose\", \"Terse\", \"Popup\", \"None\", \"Inherit\"],\n      },\n      tooltipLayout: {\n        title: \"Tooltip Layout\",\n        dataSource: [\"Icon\", \"Text\", \"Inherit\"],\n      },\n    },\n  },\n});\n","export const FormLayout = {\n  \"ru-RU\": {\n    title: \"Макет формы\",\n    settings: {\n      \"x-component-props\": {\n        labelCol: \"Наименование колонки\",\n        wrapperCol: \"Обертка колонки\",\n        colon: \"Двоеточие\",\n        labelAlign: {\n          title: \"Выравнивание наименования\",\n          dataSource: [\"Слева\", \"Справа\", \"Наследование\"],\n        },\n        wrapperAlign: {\n          title: \"Выравнивание обертки\",\n          dataSource: [\"Слева\", \"Справа\", \"Наследование\"],\n        },\n        labelWrap: \"Перенос наименования\",\n        wrapperWrap: \"Перенос обертки\",\n        labelWidth: \"Ширина наименования\",\n        wrapperWidth: \"Ширина обертки\",\n        fullness: \"Полнота\",\n        inset: \"Вставка\",\n        shallow: \"Мелкий\",\n        bordered: \"Обрамленный\",\n        size: {\n          title: \"Размер\",\n          dataSource: [\"Большой\", \"Маленький\", \"По умолчанию\", \"Наследование\"],\n        },\n        layout: {\n          title: \"Макет\",\n          dataSource: [\"Горизонтальный\", \"Вертикальный\", \"Линейный\", \"Наследование\"],\n        },\n        feedbackLayout: {\n          title: \"Макет обратной связи\",\n          dataSource: [\"Свободный\", \"Сжатый\", \"Всплывающий\", \"Не установлено\", \"Наследование\"],\n        },\n        tooltipLayout: {\n          title: \"Макет всплывающей подсказки\",\n          dataSource: [\"Значок\", \"Текст\", \"Наследование\"],\n        },\n      },\n    },\n  },\n  \"en-US\": {\n    title: \"Form Layout\",\n    settings: {\n      \"x-component-props\": {\n        labelCol: \"Label Col\",\n        wrapperCol: \"Wrapper Col\",\n        colon: \"Colon\",\n        labelAlign: {\n          title: \"Label Align\",\n          dataSource: [\"Left\", \"Right\", \"Inherit\"],\n        },\n        wrapperAlign: {\n          title: \"Wrapper Align\",\n          dataSource: [\"Left\", \"Right\", \"Inherit\"],\n        },\n        labelWrap: \"Label Wrap\",\n        wrapperWrap: \"Wrapper Wrap\",\n        labelWidth: \"Label Width\",\n        wrapperWidth: \"Wrapper Width\",\n        fullness: \"Fullness\",\n        inset: \"Inset\",\n        shallow: \"Shallow\",\n        bordered: \"Bordered\",\n        size: {\n          title: \"Size\",\n          dataSource: [\"Large\", \"Small\", \"Default\", \"Inherit\"],\n        },\n        layout: {\n          title: \"Layout\",\n          dataSource: [\"Horizontal\", \"Vertical\", \"Inline\", \"Inherit\"],\n        },\n        feedbackLayout: {\n          title: \"Feedback Layout\",\n          dataSource: [\"Loose\", \"Terse\", \"Popup\", \"None\", \"Inherit\"],\n        },\n        tooltipLayout: {\n          title: \"Tooltip Layout\",\n          dataSource: [\"Icon\", \"Text\", \"Inherit\"],\n        },\n      },\n    },\n  },\n};\n","export const Text = {\n  \"ru-RU\": {\n    title: \"Текст\",\n    settings: {\n      \"x-component-props\": {\n        content: \"Текстовое содержимое\",\n        mode: {\n          title: \"Текстовый режим\",\n          dataSource: [\"H1\", \"H2\", \"H3\", \"Paragraph\", \"Normal\"],\n        },\n      },\n    },\n  },\n  \"en-US\": {\n    title: \"Text\",\n    settings: {\n      \"x-component-props\": {\n        content: \"Text Content\",\n        mode: {\n          title: \"Text Mode\",\n          dataSource: [\"H1\", \"H2\", \"H3\", \"Paragraph\", \"Normal\"],\n        },\n      },\n    },\n  },\n};\n","export const Card = {\n  \"ru-RU\": {\n    title: \"Карточка\",\n    settings: {\n      \"x-component-props\": {\n        type: \"Тип\",\n        title: \"Заголовок\",\n        extra: \"Дополнительно\",\n        cardTypes: [\n          { label: \"Внутренний\", value: \"inner\" },\n          { label: \"По умолчанию\", value: \"\" },\n        ],\n      },\n    },\n  },\n  \"en-US\": {\n    title: \"Card\",\n    settings: {\n      \"x-component-props\": {\n        type: \"Type\",\n        title: \"Title\",\n        extra: \"Extra\",\n        cardTypes: [\n          { label: \"Inner\", value: \"inner\" },\n          { label: \"Default\", value: \"\" },\n        ],\n      },\n    },\n  },\n};\n","import { GlobalRegistry } from \"@designable/core\";\n\nGlobalRegistry.registerDesignerLocales({\n  \"ru-RU\": {\n    Previews: {\n      droppable: \"Перемещаемые компоненты\",\n      addTabPane: \"Добавить вкладку\",\n      addCollapsePanel: \"Добавить сворачивание\",\n      addTableColumn: \"Добавить столбец\",\n      addTableSortHandle: \"Добавить сортировку\",\n      addIndex: \"Добавить индекс\",\n      addOperation: \"Добавить действие\",\n    },\n  },\n});\n\nexport const ArrayAddition = {\n  \"ru-RU\": {\n    title: \"Добавить кнопку\",\n    settings: {\n      \"x-component-props\": {\n        method: \"Метод\",\n        defaultValue: \"По умолчанию\",\n      },\n    },\n  },\n};\n\nexport const ArrayRemove = {\n  \"ru-RU\": {\n    title: \"Удаление\",\n  },\n  \"en-US\": {\n    title: \"Remove\",\n  },\n};\n\nexport const ArrayMoveUp = {\n  \"ru-RU\": {\n    title: \"Переместить вверх\",\n  },\n  \"en-US\": {\n    title: \"Move Up\",\n  },\n};\n\nexport const ArrayMoveDown = {\n  \"ru-RU\": {\n    title: \"Переместить вниз\",\n  },\n  \"en-US\": {\n    title: \"Move Down\",\n  },\n};\n\nexport const ArrayIndex = {\n  \"ru-RU\": {\n    title: \"Индекс\",\n  },\n  \"en-US\": {\n    title: \"Index\",\n  },\n};\n\nexport const ArraySortHandle = {\n  \"ru-RU\": {\n    title: \"Сортировка\",\n  },\n  \"en-US\": {\n    title: \"Sort Handle\",\n  },\n};\n","import { createLocales } from \"@designable/core\";\nimport { Card } from \"./Card\";\n\nexport const ArrayCards = createLocales(Card, {\n  \"ru-RU\": {\n    title: \"Массив карточек\",\n    addIndex: \"Добавить индекс\",\n    addOperation: \"Добавить действие\",\n  },\n  \"en-US\": {\n    title: \"Array Cards\",\n    addIndex: \"Add Index\",\n    addOperation: \"Add Operations\",\n  },\n});\n","export const ArrayTable = {\n  \"ru-RU\": {\n    title: \"Таблица массивов\",\n    addSortHandle: \"Добавить сортировку\",\n    addColumn: \"Добавить столбец\",\n    addIndex: \"Добавить индекс\",\n    addOperation: \"Добавить действие\",\n    settings: {\n      \"x-component-props\": {\n        showHeader: \"Показать заголовок\",\n        sticky: \"Липкий\",\n        align: {\n          title: \"Выравнивание\",\n          dataSource: [\"Слева\", \"Справа\", \"По центру\"],\n        },\n        colSpan: \"Размах столбца\",\n        fixed: {\n          title: \"Фиксированный\",\n          dataSource: [\"Слева\", \"Справа\", \"Не установлено\"],\n        },\n        width: \"Ширина\",\n        defaultValue: \"Значение по умолчанию\",\n        tableLayout: {\n          title: \"Макет таблицы\",\n          dataSource: [\"Авто\", \"Фиксированный\"],\n        },\n      },\n    },\n  },\n  \"en-US\": {\n    title: \"Array Table\",\n    addSortHandle: \"Add Sort Handle\",\n    addColumn: \"Add Column\",\n    addIndex: \"Add Index\",\n    addOperation: \"Add Operations\",\n    settings: {\n      \"x-component-props\": {\n        showHeader: \"Show Header\",\n        sticky: \"Sticky\",\n        align: {\n          title: \"Align\",\n          dataSource: [\"Left\", \"Right\", \"Center\"],\n        },\n        colSpan: \"Col Span\",\n        fixed: { title: \"Fixed\", dataSource: [\"Left\", \"Right\", \"None\"] },\n        width: \"Width\",\n        defaultValue: \"Default Value\",\n        tableLayout: {\n          title: \"Table Layout\",\n          dataSource: [\"Auto\", \"Fixed\"],\n        },\n      },\n    },\n  },\n};\n\nexport const ArrayTableColumn = {\n  \"ru-RU\": {\n    title: \"Столбец\",\n    settings: {\n      \"x-component-props\": {\n        title: \"Заголовок\",\n        align: {\n          title: \"Выровнять\",\n          dataSource: [\"Слева\", \"Справа\", \"По центру\"],\n        },\n        colSpan: \"Размах столбца\",\n        width: \"Ширина\",\n        fixed: {\n          title: \"Фиксированный\",\n          dataSource: [\"Слева\", \"Справа\", \"Не установлено\"],\n        },\n      },\n    },\n  },\n  \"en-US\": {\n    title: \"Column\",\n    settings: {\n      \"x-component-props\": {\n        title: \"Title\",\n        align: {\n          title: \"Align\",\n          dataSource: [\"Left\", \"Right\", \"Center\"],\n        },\n        colSpan: \"Col Span\",\n        width: \"Width\",\n        fixed: {\n          title: \"Fixed\",\n          dataSource: [\"Left\", \"Right\", \"None\"],\n        },\n      },\n    },\n  },\n};\n","export const Void = {\n  \"ru-RU\": {\n    title: \"Пустая область\",\n  },\n  \"en-US\": {\n    title: \"Void\",\n  },\n};\n","export const Space = {\n  \"ru-RU\": {\n    title: \"Пространство\",\n    settings: {\n      \"x-component-props\": {\n        direction: {\n          title: \"Направление\",\n          dataSource: [\"Вертикальный\", \"Горизонтальный\"],\n        },\n        split: \"Разделить\",\n        wrap: \"Перенос слов\",\n        align: {\n          title: \"Выравнивание\",\n          dataSource: [\"Начало\", \"Конец\", \"По центру\", \"По основанию\"],\n        },\n      },\n    },\n  },\n  \"en-US\": {\n    title: \"Space\",\n    settings: {\n      \"x-component-props\": {\n        direction: {\n          title: \"Direction\",\n          dataSource: [\"Vertical\", \"Horizontal\"],\n        },\n        split: \"Split\",\n        wrap: \"Word Wrap\",\n        align: {\n          title: \"Align\",\n          dataSource: [\"Start\", \"End\", \"Center\", \"Baseline\"],\n        },\n      },\n    },\n  },\n};\n","export const FormTab = {\n  \"ru-RU\": {\n    title: \"Вкладки\",\n    addTabPane: \"Добавить панель\",\n    settings: {\n      \"x-component-props\": {\n        animated: \"Включить анимацию\",\n        centered: \"Наименование по центру\",\n        tab: \"Заголовок вкладки\",\n        type: {\n          title: \"Тип\",\n          dataSource: [\n            { label: \"Линия\", value: \"line\" },\n            { label: \"Карточка\", value: \"card\" },\n          ],\n        },\n      },\n    },\n  },\n  \"en-US\": {\n    title: \"Tabs\",\n    addTabPane: \"Add Panel\",\n    settings: {\n      \"x-component-props\": {\n        animated: \"Enable Animated\",\n        centered: \"Label Centered\",\n        tab: \"Tab Title\",\n        type: {\n          title: \"Type\",\n          dataSource: [\n            { label: \"Line\", value: \"line\" },\n            { label: \"Card\", value: \"card\" },\n          ],\n        },\n      },\n    },\n  },\n};\n\nexport const FormTabPane = {\n  \"ru-RU\": {\n    title: \"Панель вкладок\",\n    settings: {\n      \"x-component-props\": {\n        tab: \"Название панели\",\n      },\n    },\n  },\n  \"en-US\": {\n    title: \"Tab Panel\",\n    settings: {\n      \"x-component-props\": {\n        tab: \"Panel Title\",\n      },\n    },\n  },\n};\n","export const FormCollapse = {\n  \"ru-RU\": {\n    title: \"Сворачивание\",\n    addCollapsePanel: \"Добавить панель\",\n    settings: {\n      \"x-component-props\": {\n        accordion: \"Режим аккордеона\",\n        collapsible: {\n          title: \"Сворачиваемый\",\n          dataSource: [\"Заголовок\", \"Отключить\"],\n        },\n        ghost: \"Режим призрака\",\n        bordered: \"Обрамленный\",\n      },\n    },\n  },\n  \"en-US\": {\n    title: \"Collapse\",\n    addCollapsePanel: \"Add Panel\",\n    settings: {\n      \"x-component-props\": {\n        accordion: \"Accordion Mode\",\n        collapsible: {\n          title: \"Collapsible\",\n          dataSource: [\"Header\", \"Disable\"],\n        },\n        ghost: \"Ghost Mode\",\n        bordered: \"Bordered\",\n      },\n    },\n  },\n};\n\nexport const FormCollapsePanel = {\n  \"ru-RU\": {\n    title: \"Панель\",\n    settings: {\n      \"x-component-props\": {\n        collapsible: {\n          title: \"Сворачиваемый\",\n          dataSource: [\"Заголовок\", \"Отключить\"],\n        },\n        header: \"Заголовок\",\n        extra: \"Дополнительный контент\",\n      },\n    },\n  },\n  \"en-US\": {\n    title: \"Panel\",\n    settings: {\n      \"x-component-props\": {\n        collapsible: {\n          title: \"Collapsible\",\n          dataSource: [\"Header\", \"Disable\"],\n        },\n        header: \"Header Title\",\n        extra: \"Extra Content\",\n      },\n    },\n  },\n};\n","export const FormGrid = {\n  \"ru-RU\": {\n    title: \"Сетка\",\n    addGridColumn: \"Добавить столбец сетки\",\n    settings: {\n      \"x-component-props\": {\n        minWidth: \"Минимальная ширина\",\n        minColumns: \"Минимум столбцов\",\n        maxWidth: \"Максимальная ширина\",\n        maxColumns: \"Максимум столбцов\",\n        breakpoints: \"Контрольные точки\",\n        columnGap: \"Разрыв столбца\",\n        rowGap: \"Разрыв строки\",\n        colWrap: \"Перенос столбца\",\n      },\n    },\n  },\n  \"en-US\": {\n    title: \"Grid\",\n    addGridColumn: \"Add Grid Column\",\n    settings: {\n      \"x-component-props\": {\n        minWidth: \"Min Width\",\n        minColumns: \"Min Columns\",\n        maxWidth: \"Max Width\",\n        maxColumns: \"Max Columns\",\n        breakpoints: \"Breakpoints\",\n        columnGap: \"Column Gap\",\n        rowGap: \"Row Gap\",\n        colWrap: \"Col Wrap\",\n      },\n    },\n  },\n};\n\nexport const FormGridColumn = {\n  \"ru-RU\": {\n    title: \"Столбец сетки\",\n    settings: {\n      \"x-component-props\": {\n        gridSpan: \"Размах сетки\",\n      },\n    },\n  },\n  \"en-US\": {\n    title: \"Grid Column\",\n    settings: {\n      \"x-component-props\": {\n        gridSpan: \"Grid Span\",\n      },\n    },\n  },\n};\n","import React from \"react\";\nimport { FormPath } from \"@formily/core\";\nimport { toJS } from \"@formily/reactive\";\nimport { ArrayField, Field as InternalField, ObjectField, VoidField, observer, ISchema, Schema } from \"@formily/react\";\nimport { FormItem } from \"@formily/antd\";\nimport { each, reduce } from \"@formily/shared\";\nimport { createBehavior } from \"@designable/core\";\nimport { useDesigner, useTreeNode, useComponents, DnFC } from \"@designable/react\";\nimport { isArr, isStr } from \"@designable/shared\";\nimport { Container } from \"../../common/Container\";\nimport { AllLocales } from \"../../locales\";\n\nSchema.silent(true);\n\nconst SchemaStateMap = {\n  title: \"title\",\n  description: \"description\",\n  default: \"value\",\n  enum: \"dataSource\",\n  readOnly: \"readOnly\",\n  writeOnly: \"editable\",\n  required: \"required\",\n  \"x-content\": \"content\",\n  \"x-value\": \"value\",\n  \"x-editable\": \"editable\",\n  \"x-disabled\": \"disabled\",\n  \"x-read-pretty\": \"readPretty\",\n  \"x-read-only\": \"readOnly\",\n  \"x-visible\": \"visible\",\n  \"x-hidden\": \"hidden\",\n  \"x-display\": \"display\",\n  \"x-pattern\": \"pattern\",\n};\n\nconst NeedShownExpression = {\n  title: true,\n  description: true,\n  default: true,\n  \"x-content\": true,\n  \"x-value\": true,\n};\n\nconst isExpression = (val: any) => isStr(val) && /^\\{\\{.*\\}\\}$/.test(val);\n\nconst filterExpression = (val: any) => {\n  if (typeof val === \"object\") {\n    const isArray = isArr(val);\n    const results = reduce(\n      val,\n      (buf: any, value, key) => {\n        if (isExpression(value)) {\n          return buf;\n        } else {\n          const results = filterExpression(value);\n          if (results === undefined || results === null) {\n            return buf;\n          }\n          if (isArray) {\n            return buf.concat([results]);\n          }\n          buf[key] = results;\n          return buf;\n        }\n      },\n      isArray ? [] : {},\n    );\n    return results;\n  }\n  if (isExpression(val)) {\n    return;\n  }\n  return val;\n};\n\nconst toDesignableFieldProps = (schema: ISchema, components: any, nodeIdAttrName: string, id: string) => {\n  const results: any = {};\n  each(SchemaStateMap, (fieldKey, schemaKey) => {\n    const value = schema[schemaKey];\n    if (isExpression(value)) {\n      if (!NeedShownExpression[schemaKey]) {\n        return;\n      }\n      if (value) {\n        results[fieldKey] = value;\n        return;\n      }\n    } else if (value) {\n      results[fieldKey] = filterExpression(value);\n    }\n  });\n  if (!components[\"FormItem\"]) {\n    components[\"FormItem\"] = FormItem;\n  }\n  const decorator = schema[\"x-decorator\"] && FormPath.getIn(components, schema[\"x-decorator\"]);\n  const component = schema[\"x-component\"] && FormPath.getIn(components, schema[\"x-component\"]);\n  const decoratorProps = schema[\"x-decorator-props\"] || {};\n  const componentProps = schema[\"x-component-props\"] || {};\n\n  if (decorator) {\n    results.decorator = [decorator, toJS(decoratorProps)];\n  }\n  if (component) {\n    results.component = [component, toJS(componentProps)];\n  }\n  if (decorator) {\n    FormPath.setIn(results[\"decorator\"][1], nodeIdAttrName, id);\n  } else if (component) {\n    FormPath.setIn(results[\"component\"][1], nodeIdAttrName, id);\n  }\n  results.title = results.title && <span data-content-editable=\"title\">{results.title}</span>;\n  results.description = results.description && <span data-content-editable=\"description\">{results.description}</span>;\n  return results;\n};\n\nexport const Field: DnFC<ISchema> = observer(props => {\n  const designer = useDesigner();\n  const components = useComponents();\n  const node = useTreeNode();\n  if (!node) {\n    return null;\n  }\n  const fieldProps = toDesignableFieldProps(props, components, designer.props.nodeIdAttrName, node.id);\n  if (props.type === \"object\") {\n    return (\n      <Container>\n        <ObjectField {...fieldProps} name={node.id}>\n          {props.children}\n        </ObjectField>\n      </Container>\n    );\n  } else if (props.type === \"array\") {\n    return <ArrayField {...fieldProps} name={node.id} />;\n  } else if (node.props.type === \"void\") {\n    return (\n      <VoidField {...fieldProps} name={node.id}>\n        {props.children}\n      </VoidField>\n    );\n  }\n  return <InternalField {...fieldProps} name={node.id} />;\n});\n\nField.Behavior = createBehavior({\n  name: \"Field\",\n  selector: \"Field\",\n  designerLocales: AllLocales.Field,\n});\n","import React from \"react\";\nimport { Switch } from \"antd\";\n\nexport interface IFormItemSwitcherProps {\n  value?: string;\n  onChange?: (value: string) => void;\n}\n\nexport const FormItemSwitcher: React.FC<IFormItemSwitcherProps> = ({ value, onChange }) => {\n  return (\n    <Switch\n      checked={value === \"FormItem\"}\n      onChange={eventValue => {\n        onChange(!!eventValue ? \"FormItem\" : \"\");\n      }}\n    />\n  );\n};\n","import { ISchema } from \"@formily/react\";\n\nexport const Input: ISchema & { TextArea?: ISchema } = {\n  type: \"object\",\n  properties: {\n    addonBefore: {\n      type: \"string\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Input\",\n    },\n    addonAfter: {\n      type: \"string\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Input\",\n    },\n    prefix: {\n      type: \"string\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Input\",\n    },\n    suffix: {\n      type: \"string\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Input\",\n    },\n    allowClear: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n    bordered: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n      \"x-component-props\": {\n        defaultChecked: true,\n      },\n    },\n    maxLength: {\n      type: \"number\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"NumberPicker\",\n    },\n    placeholder: {\n      type: \"string\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Input\",\n    },\n    size: {\n      type: \"string\",\n      enum: [\"large\", \"small\", \"middle\", null],\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Select\",\n      \"x-component-props\": {\n        defaultValue: \"middle\",\n      },\n    },\n  },\n};\n\nInput.TextArea = {\n  type: \"object\",\n  properties: {\n    bordered: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n      \"x-component-props\": {\n        defaultChecked: true,\n      },\n    },\n    maxLength: {\n      type: \"number\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"NumberPicker\",\n    },\n    placeholder: {\n      type: \"string\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Input\",\n    },\n    autoSize: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n    showCount: {\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n  },\n};\n","import { ISchema } from \"@formily/react\";\n\nexport const Text: ISchema = {\n  type: \"object\",\n  properties: {\n    content: {\n      type: \"string\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Input.TextArea\",\n    },\n    mode: {\n      type: \"string\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Select\",\n      \"x-component-props\": {\n        defaultValue: \"normal\",\n      },\n      enum: [\"h1\", \"h2\", \"h3\", \"p\", \"normal\"],\n    },\n  },\n};\n","import { ISchema } from \"@formily/react\";\n\nexport const FormLayout: ISchema = {\n  type: \"object\",\n  properties: {\n    labelCol: {\n      type: \"number\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"NumberPicker\",\n    },\n    wrapperCol: {\n      type: \"number\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"NumberPicker\",\n    },\n    labelWidth: {\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"SizeInput\",\n    },\n    wrapperWidth: {\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"SizeInput\",\n    },\n    colon: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n      \"x-component-props\": {\n        defaultChecked: true,\n      },\n    },\n    feedbackLayout: {\n      type: \"string\",\n      enum: [\"loose\", \"terse\", \"popover\", \"none\", null],\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Select\",\n      \"x-component-props\": {\n        defaultValue: \"loose\",\n      },\n    },\n    size: {\n      type: \"string\",\n      enum: [\"large\", \"small\", \"default\", null],\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Select\",\n      \"x-component-props\": {\n        defaultValue: \"default\",\n      },\n    },\n    layout: {\n      type: \"string\",\n      enum: [\"vertical\", \"horizontal\", \"inline\", null],\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Select\",\n      \"x-component-props\": {\n        defaultValue: \"horizontal\",\n      },\n    },\n    tooltipLayout: {\n      type: \"string\",\n      enum: [\"icon\", \"text\", null],\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Select\",\n      \"x-component-props\": {\n        defaultValue: \"icon\",\n      },\n    },\n    labelAlign: {\n      type: \"string\",\n      enum: [\"left\", \"right\", null],\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Select\",\n      \"x-component-props\": {\n        defaultValue: \"right\",\n      },\n    },\n    wrapperAlign: {\n      type: \"string\",\n      enum: [\"left\", \"right\", null],\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Select\",\n      \"x-component-props\": {\n        defaultValue: \"left\",\n      },\n    },\n    labelWrap: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n    wrapperWrap: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n\n    fullness: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n    inset: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n    shallow: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n      \"x-component-props\": {\n        defaultChecked: true,\n      },\n    },\n    bordered: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n      \"x-component-props\": {\n        defaultChecked: true,\n      },\n    },\n  },\n};\n","import { ISchema } from \"@formily/react\";\n\nexport const CSSStyle: ISchema = {\n  type: \"void\",\n  properties: {\n    \"style.width\": {\n      type: \"string\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"SizeInput\",\n    },\n    \"style.height\": {\n      type: \"string\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"SizeInput\",\n    },\n    \"style.display\": {\n      \"x-component\": \"DisplayStyleSetter\",\n    },\n    \"style.background\": {\n      \"x-component\": \"BackgroundStyleSetter\",\n    },\n    \"style.boxShadow\": {\n      \"x-component\": \"BoxShadowStyleSetter\",\n    },\n    \"style.font\": {\n      \"x-component\": \"FontStyleSetter\",\n    },\n    \"style.margin\": {\n      \"x-component\": \"BoxStyleSetter\",\n    },\n    \"style.padding\": {\n      \"x-component\": \"BoxStyleSetter\",\n    },\n    \"style.borderRadius\": {\n      \"x-component\": \"BorderRadiusStyleSetter\",\n    },\n    \"style.border\": {\n      \"x-component\": \"BorderStyleSetter\",\n    },\n    \"style.opacity\": {\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Slider\",\n      \"x-component-props\": {\n        defaultValue: 1,\n        min: 0,\n        max: 1,\n        step: 0.01,\n      },\n    },\n  },\n};\n","import { ISchema } from \"@formily/react\";\nimport { FormLayout } from \"./FormLayout\";\nimport { CSSStyle } from \"./CSSStyle\";\n\nexport const Form: ISchema = {\n  type: \"object\",\n  properties: {\n    ...(FormLayout.properties as any),\n    style: CSSStyle,\n  },\n};\n","import { ISchema } from \"@formily/react\";\n\nexport const FormItem: ISchema = {\n  type: \"object\",\n  properties: {\n    tooltip: {\n      type: \"string\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Input\",\n    },\n    addonBefore: {\n      type: \"string\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Input\",\n    },\n    addonAfter: {\n      type: \"string\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Input\",\n    },\n    labelCol: {\n      type: \"number\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"NumberPicker\",\n    },\n    wrapperCol: {\n      type: \"number\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"NumberPicker\",\n    },\n    labelWidth: {\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"SizeInput\",\n    },\n    wrapperWidth: {\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"SizeInput\",\n    },\n    colon: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n      \"x-component-props\": {\n        defaultChecked: true,\n      },\n    },\n    asterisk: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n    gridSpan: {\n      type: \"number\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"NumberPicker\",\n    },\n    feedbackLayout: {\n      type: \"string\",\n      enum: [\"loose\", \"terse\", \"popover\", \"none\", null],\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Select\",\n      \"x-component-props\": {\n        defaultValue: \"loose\",\n      },\n    },\n    size: {\n      type: \"string\",\n      enum: [\"large\", \"small\", \"default\", null],\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Select\",\n      \"x-component-props\": {\n        defaultValue: \"default\",\n      },\n    },\n    layout: {\n      type: \"string\",\n      enum: [\"vertical\", \"horizontal\", \"inline\", null],\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Select\",\n      \"x-component-props\": {\n        defaultValue: \"horizontal\",\n      },\n    },\n\n    tooltipLayout: {\n      type: \"string\",\n      enum: [\"icon\", \"text\", null],\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Select\",\n      \"x-component-props\": {\n        defaultValue: \"icon\",\n      },\n    },\n    labelAlign: {\n      type: \"string\",\n      enum: [\"left\", \"right\", null],\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Select\",\n      \"x-component-props\": {\n        defaultValue: \"right\",\n      },\n    },\n    wrapperAlign: {\n      type: \"string\",\n      enum: [\"left\", \"right\", null],\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Select\",\n      \"x-component-props\": {\n        defaultValue: \"left\",\n      },\n    },\n    labelWrap: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n    wrapperWrap: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n    fullness: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n    inset: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n    bordered: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n      \"x-component-props\": {\n        defaultChecked: true,\n      },\n    },\n  },\n};\n","import { ISchema } from \"@formily/react\";\n\nexport const Select: ISchema = {\n  type: \"object\",\n  properties: {\n    mode: {\n      type: \"string\",\n      enum: [\"multiple\", \"tags\", null],\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Radio.Group\",\n      \"x-component-props\": {\n        defaultValue: null,\n        optionType: \"button\",\n      },\n    },\n    allowClear: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n    autoClearSearchValue: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n      \"x-component-props\": {\n        defaultChecked: true,\n      },\n    },\n    dropdownMatchSelectWidth: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n      \"x-component-props\": {\n        defaultChecked: true,\n      },\n    },\n    autoFocus: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n    bordered: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n      \"x-component-props\": {\n        defaultChecked: true,\n      },\n    },\n    defaultActiveFirstOption: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n      \"x-component-props\": {\n        defaultChecked: true,\n      },\n    },\n    defaultOpen: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n    labelInValue: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n    showArrow: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n    showSearch: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n    virtual: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n      \"x-component-props\": {\n        defaultValue: true,\n      },\n    },\n    filterOption: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"ValueInput\",\n      \"x-component-props\": {\n        include: [\"BOOLEAN\", \"EXPRESSION\"],\n      },\n    },\n    filterSort: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"ValueInput\",\n      \"x-component-props\": {\n        include: [\"EXPRESSION\"],\n      },\n    },\n    listHeight: {\n      type: \"number\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"NumberPicker\",\n      \"x-component-props\": {\n        defaultValue: 256,\n      },\n    },\n    maxTagCount: {\n      type: \"number\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"NumberPicker\",\n    },\n    maxTagPlaceholder: {\n      type: \"string\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Input\",\n    },\n    maxTagTextLength: {\n      type: \"number\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"NumberPicker\",\n    },\n    notFoundContent: {\n      type: \"string\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Input\",\n      \"x-component-props\": {\n        defaultValue: \"Not Found\",\n      },\n    },\n    placeholder: {\n      type: \"string\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Input\",\n    },\n\n    size: {\n      type: \"string\",\n      enum: [\"large\", \"small\", \"middle\", null],\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Select\",\n      \"x-component-props\": {\n        defaultValue: \"middle\",\n      },\n    },\n  },\n};\n","import { GlobalRegistry } from \"@designable/core\";\nimport { ISchema } from \"@formily/react\";\n\nexport const Card: ISchema & { Addition?: ISchema } = {\n  type: \"object\",\n  properties: {\n    title: {\n      type: \"string\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Input\",\n    },\n    extra: {\n      type: \"string\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Input\",\n    },\n    type: {\n      type: \"boolean\",\n      enum: GlobalRegistry.getDesignerMessage(\"settings.cardTypes\"),\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Radio.Group\",\n      \"x-component-props\": {\n        defaultValue: \"\",\n        optionType: \"button\",\n      },\n    },\n    bordered: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n      \"x-component-props\": {\n        defaultChecked: true,\n      },\n    },\n  },\n};\n","import { ISchema } from \"@formily/react\";\n\nexport const Cascader: ISchema = {\n  type: \"object\",\n  properties: {\n    allowClear: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n      \"x-component-props\": {\n        defaultChecked: true,\n      },\n    },\n    changeOnSelect: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n    autoFocus: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n    bordered: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n      \"x-component-props\": {\n        defaultChecked: true,\n      },\n    },\n    displayRender: {\n      type: \"string\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"ValueInput\",\n      \"x-component-props\": {\n        include: [\"EXPRESSION\"],\n      },\n    },\n    fieldNames: {\n      type: \"string\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"ValueInput\",\n      \"x-component-props\": {\n        include: [\"EXPRESSION\"],\n      },\n    },\n    showSearch: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n    notFoundContent: {\n      type: \"string\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Input\",\n      \"x-component-props\": {\n        defaultValue: \"Not Found\",\n      },\n    },\n    placeholder: {\n      type: \"string\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Input\",\n    },\n    size: {\n      type: \"string\",\n      enum: [\"large\", \"small\", \"middle\", null],\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Select\",\n      \"x-component-props\": {\n        defaultValue: \"middle\",\n      },\n    },\n  },\n};\n","import { ISchema } from \"@formily/react\";\n\nexport const Checkbox: ISchema & { Group?: ISchema } = {\n  type: \"object\",\n  properties: {\n    autoFocus: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n  },\n};\n","import { ISchema } from \"@formily/react\";\n\nexport const Radio: ISchema & { Group?: ISchema } = {\n  type: \"object\",\n  properties: {\n    autoFocus: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n  },\n};\n\nRadio.Group = {\n  type: \"object\",\n  properties: {\n    optionType: {\n      type: \"string\",\n      enum: [\"default\", \"button\"],\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Radio.Group\",\n      \"x-component-props\": {\n        defaultValue: \"default\",\n        optionType: \"button\",\n      },\n    },\n    buttonStyle: {\n      type: \"string\",\n      enum: [\"outline\", \"solid\"],\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Radio.Group\",\n      \"x-component-props\": {\n        defaultValue: \"outline\",\n        optionType: \"button\",\n      },\n    },\n  },\n};\n","import { ISchema } from \"@formily/react\";\n\nconst CommonDatePickerAPI = {\n  allowClear: {\n    type: \"boolean\",\n    \"x-decorator\": \"FormItem\",\n    \"x-component\": \"Switch\",\n    \"x-component-props\": {\n      defaultChecked: true,\n    },\n  },\n  autoFocus: {\n    type: \"boolean\",\n    \"x-decorator\": \"FormItem\",\n    \"x-component\": \"Switch\",\n  },\n  bordered: {\n    type: \"boolean\",\n    \"x-decorator\": \"FormItem\",\n    \"x-component\": \"Switch\",\n    \"x-component-props\": {\n      defaultChecked: true,\n    },\n  },\n  disabledTime: {\n    \"x-decorator\": \"FormItem\",\n    \"x-component\": \"ValueInput\",\n    \"x-component-props\": {\n      include: [\"EXPRESSION\"],\n    },\n  },\n  disabledDate: {\n    \"x-decorator\": \"FormItem\",\n    \"x-component\": \"ValueInput\",\n    \"x-component-props\": {\n      include: [\"EXPRESSION\"],\n    },\n  },\n  inputReadOnly: {\n    type: \"boolean\",\n    \"x-decorator\": \"FormItem\",\n    \"x-component\": \"Switch\",\n  },\n  placeholder: {\n    type: \"string\",\n    \"x-decorator\": \"FormItem\",\n    \"x-component\": \"Input\",\n  },\n  size: {\n    type: \"string\",\n    enum: [\"large\", \"small\", \"middle\", null],\n    \"x-decorator\": \"FormItem\",\n    \"x-component\": \"Select\",\n    \"x-component-props\": {\n      defaultValue: \"middle\",\n    },\n  },\n  format: {\n    type: \"string\",\n    \"x-decorator\": \"FormItem\",\n    \"x-component\": \"Input\",\n    \"x-component-props\": {\n      placeholder: \"YYYY-MM-DD\",\n    },\n  },\n};\n\nexport const DatePicker: ISchema & { RangePicker?: ISchema } = {\n  type: \"object\",\n  properties: {\n    picker: {\n      type: \"string\",\n      enum: [\"time\", \"date\", \"month\", \"year\", \"quarter\", \"decade\"],\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Select\",\n      \"x-component-props\": {\n        defaultValue: \"date\",\n      },\n    },\n    ...CommonDatePickerAPI,\n    showNow: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n    showTime: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n    showToday: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n  },\n};\n\nDatePicker.RangePicker = {\n  type: \"object\",\n  properties: {\n    picker: {\n      type: \"string\",\n      enum: [\"time\", \"date\", \"month\", \"year\", \"decade\"],\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Select\",\n      \"x-component-props\": {\n        defaultValue: \"date\",\n      },\n    },\n    ...CommonDatePickerAPI,\n    showTime: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n  },\n};\n","import { ISchema } from \"@formily/react\";\n\nexport const NumberPicker: ISchema = {\n  type: \"object\",\n  properties: {\n    decimalSeparator: {\n      type: \"string\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Input\",\n    },\n    precision: {\n      type: \"number\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"NumberPicker\",\n    },\n    max: {\n      type: \"number\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"NumberPicker\",\n    },\n    min: {\n      type: \"number\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"NumberPicker\",\n    },\n    step: {\n      type: \"number\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"NumberPicker\",\n    },\n    placeholder: {\n      type: \"string\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Input\",\n    },\n    size: {\n      type: \"string\",\n      enum: [\"large\", \"small\", \"middle\", null],\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Select\",\n      \"x-component-props\": {\n        defaultValue: \"middle\",\n      },\n    },\n    formatter: {\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"ValueInput\",\n      \"x-component-props\": {\n        include: [\"EXPRESSION\"],\n      },\n    },\n    parser: {\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"ValueInput\",\n      \"x-component-props\": {\n        include: [\"EXPRESSION\"],\n      },\n    },\n    stringMode: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n    bordered: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n      \"x-component-props\": {\n        defaultChecked: true,\n      },\n    },\n    keyboard: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n      \"x-component-props\": {\n        defaultChecked: true,\n      },\n    },\n  },\n};\n","import { ISchema } from \"@formily/react\";\nimport { Input } from \"./Input\";\nexport const Password: ISchema = {\n  type: \"object\",\n  properties: {\n    ...(Input.properties as any),\n    checkStrength: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n  },\n};\n","import { ISchema } from \"@formily/react\";\n\nexport const Rate: ISchema = {\n  type: \"object\",\n  properties: {\n    allowClear: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n      \"x-component-props\": {\n        defaultChecked: true,\n      },\n    },\n    count: {\n      type: \"number\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"NumberPicker\",\n      \"x-component-props\": {\n        defaultValue: 5,\n      },\n    },\n    allowHalf: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n    tooltips: {\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"ValueInput\",\n      \"x-component-props\": {\n        include: [\"EXPRESSION\"],\n      },\n    },\n    autoFocus: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n  },\n};\n","import { GlobalRegistry } from \"@designable/core\";\nimport { ISchema } from \"@formily/react\";\n\nexport const Slider: ISchema = {\n  type: \"object\",\n  properties: {\n    allowClear: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n    dots: {\n      title: GlobalRegistry.getDesignerMessage(\"settings.sliderDots\"),\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n    range: {\n      title: GlobalRegistry.getDesignerMessage(\"settings.sliderRange\"),\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n    reverse: {\n      title: GlobalRegistry.getDesignerMessage(\"settings.sliderReverse\"),\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n    vertical: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n    tooltipVisible: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n    tooltipPlacement: {\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"ValueInput\",\n      \"x-component-props\": {\n        include: [\"EXPRESSION\"],\n      },\n    },\n    marks: {\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"ValueInput\",\n      \"x-component-props\": {\n        include: [\"EXPRESSION\"],\n      },\n    },\n    max: {\n      type: \"number\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"NumberPicker\",\n      \"x-component-props\": {\n        defaultValue: 100,\n      },\n    },\n    min: {\n      type: \"number\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"NumberPicker\",\n      \"x-component-props\": {\n        defaultValue: 0,\n      },\n    },\n    step: {\n      type: \"number\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"NumberPicker\",\n      \"x-component-props\": {\n        defaultValue: 1,\n      },\n    },\n  },\n};\n","import { ISchema } from \"@formily/react\";\n\nexport const CommonTimePickerAPI = {\n  allowClear: {\n    type: \"boolean\",\n    \"x-decorator\": \"FormItem\",\n    \"x-component\": \"Switch\",\n    \"x-component-props\": {\n      defaultChecked: true,\n    },\n  },\n  autoFocus: {\n    type: \"boolean\",\n    \"x-decorator\": \"FormItem\",\n    \"x-component\": \"Switch\",\n  },\n  bordered: {\n    type: \"boolean\",\n    \"x-decorator\": \"FormItem\",\n    \"x-component\": \"Switch\",\n    \"x-component-props\": {\n      defaultChecked: true,\n    },\n  },\n  clearText: {\n    type: \"string\",\n    \"x-decorator\": \"FormItem\",\n    \"x-component\": \"Input\",\n  },\n  disabledHours: {\n    \"x-decorator\": \"FormItem\",\n    \"x-component\": \"ValueInput\",\n    \"x-component-props\": {\n      include: [\"EXPRESSION\"],\n    },\n  },\n  disabledMinutes: {\n    \"x-decorator\": \"FormItem\",\n    \"x-component\": \"ValueInput\",\n    \"x-component-props\": {\n      include: [\"EXPRESSION\"],\n    },\n  },\n  disabledSeconds: {\n    \"x-decorator\": \"FormItem\",\n    \"x-component\": \"ValueInput\",\n    \"x-component-props\": {\n      include: [\"EXPRESSION\"],\n    },\n  },\n  hideDisabledOptions: {\n    type: \"boolean\",\n    \"x-decorator\": \"FormItem\",\n    \"x-component\": \"Switch\",\n  },\n  inputReadOnly: {\n    type: \"boolean\",\n    \"x-decorator\": \"FormItem\",\n    \"x-component\": \"Switch\",\n  },\n  showNow: {\n    type: \"boolean\",\n    \"x-decorator\": \"FormItem\",\n    \"x-component\": \"Switch\",\n  },\n  use12Hours: {\n    type: \"boolean\",\n    \"x-decorator\": \"FormItem\",\n    \"x-component\": \"Switch\",\n  },\n  hourStep: {\n    type: \"number\",\n    \"x-decorator\": \"FormItem\",\n    \"x-component\": \"NumberPicker\",\n    \"x-component-props\": {\n      defaultValue: 1,\n    },\n  },\n  minuteStep: {\n    type: \"number\",\n    \"x-decorator\": \"FormItem\",\n    \"x-component\": \"NumberPicker\",\n    \"x-component-props\": {\n      defaultValue: 1,\n    },\n  },\n  secondStep: {\n    type: \"number\",\n    \"x-decorator\": \"FormItem\",\n    \"x-component\": \"NumberPicker\",\n    \"x-component-props\": {\n      defaultValue: 1,\n    },\n  },\n  placeholder: {\n    type: \"string\",\n    \"x-decorator\": \"FormItem\",\n    \"x-component\": \"Input\",\n  },\n  size: {\n    type: \"string\",\n    enum: [\"large\", \"small\", \"middle\", null],\n    \"x-decorator\": \"FormItem\",\n    \"x-component\": \"Select\",\n  },\n  format: {\n    type: \"string\",\n    \"x-decorator\": \"FormItem\",\n    \"x-component\": \"Input\",\n    \"x-component-props\": {\n      placeholder: \"YYYY-MM-DD\",\n    },\n  },\n};\n\nexport const TimePicker: ISchema & { RangePicker?: ISchema } = {\n  type: \"object\",\n  properties: CommonTimePickerAPI,\n};\n\nTimePicker.RangePicker = {\n  type: \"object\",\n  properties: CommonTimePickerAPI,\n};\n","import { ISchema } from \"@formily/react\";\n\nexport const TreeSelect: ISchema = {\n  type: \"object\",\n  properties: {\n    allowClear: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n    autoClearSearchValue: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n      \"x-component-props\": {\n        defaultChecked: true,\n      },\n    },\n    autoFocus: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n    bordered: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n      \"x-component-props\": {\n        defaultChecked: true,\n      },\n    },\n    labelInValue: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n    showArrow: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n    showSearch: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n    virtual: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n      \"x-component-props\": {\n        defaultChecked: true,\n      },\n    },\n    treeCheckable: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n    treeDefaultExpandAll: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n    dropdownMatchSelectWidth: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n      \"x-component-props\": {\n        defaultChecked: true,\n      },\n    },\n    showCheckedStrategy: {\n      type: \"string\",\n      enum: [\"SHOW_ALL\", \"SHOW_PARENT\", \"SHOW_CHILD\"],\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Select\",\n      \"x-component-props\": {\n        defaultValue: \"SHOW_CHILD\",\n      },\n    },\n    treeDefaultExpandedKeys: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"ValueInput\",\n      \"x-component-props\": {\n        include: [\"EXPRESSION\"],\n      },\n    },\n    treeNodeFilterProp: {\n      type: \"string\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Input\",\n    },\n    treeNodeLabelProp: {\n      type: \"string\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Input\",\n    },\n    filterTreeNode: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"ValueInput\",\n      \"x-component-props\": {\n        include: [\"BOOLEAN\", \"EXPRESSION\"],\n      },\n    },\n    treeDataSimpleMode: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"ValueInput\",\n      \"x-component-props\": {\n        include: [\"BOOLEAN\", \"EXPRESSION\"],\n      },\n    },\n    listHeight: {\n      type: \"number\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"NumberPicker\",\n      \"x-component-props\": {\n        defaultValue: 256,\n      },\n    },\n    placeholder: {\n      type: \"string\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Input\",\n    },\n    size: {\n      type: \"string\",\n      enum: [\"large\", \"small\", \"middle\", null],\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Select\",\n      \"x-component-props\": {\n        defaultValue: \"middle\",\n      },\n    },\n  },\n};\n","import { ISchema } from \"@formily/react\";\n\nexport const Transfer: ISchema = {\n  type: \"object\",\n  properties: {\n    oneWay: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n    showSearch: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n    showSearchAll: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n      \"x-component-props\": {\n        defaultChecked: true,\n      },\n    },\n    filterOption: {\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"ValueInput\",\n      \"x-component-props\": {\n        include: [\"EXPRESSION\"],\n      },\n    },\n    operations: {\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"ValueInput\",\n      \"x-component-props\": {\n        include: [\"EXPRESSION\"],\n      },\n    },\n    titles: {\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"ValueInput\",\n      \"x-component-props\": {\n        include: [\"EXPRESSION\"],\n      },\n    },\n  },\n};\n","import { ISchema } from \"@formily/react\";\n\nexport const Upload: ISchema & { Dragger?: ISchema } = {\n  type: \"object\",\n  properties: {\n    textContent: {\n      type: \"string\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Input\",\n    },\n    accept: {\n      type: \"string\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Input\",\n    },\n    action: {\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"ValueInput\",\n      \"x-component-props\": {\n        include: [\"TEXT\", \"EXPRESSION\"],\n      },\n    },\n    name: {\n      type: \"string\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Input\",\n      \"x-component-props\": {\n        defaultValue: \"file\",\n      },\n    },\n    maxCount: {\n      type: \"number\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"NumberPicker\",\n    },\n    method: {\n      enum: [\"POST\", \"PUT\", \"GET\"],\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Radio.Group\",\n      \"x-component-props\": {\n        defaultValue: \"POST\",\n        optionType: \"button\",\n      },\n    },\n    data: {\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"ValueInput\",\n      \"x-component-props\": {\n        include: [\"EXPRESSION\"],\n      },\n    },\n    headers: {\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"ValueInput\",\n      \"x-component-props\": {\n        include: [\"EXPRESSION\"],\n      },\n    },\n\n    listType: {\n      enum: [\"text\", \"picture\", \"picture-card\"],\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Radio.Group\",\n      \"x-component-props\": {\n        defaultValue: \"text\",\n        optionType: \"button\",\n      },\n    },\n    directory: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n    multiple: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n    openFileDialogOnClick: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n      \"x-component-props\": {\n        defaultChecked: true,\n      },\n    },\n    showUploadList: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n      \"x-component-props\": {\n        defaultChecked: true,\n      },\n    },\n    withCredentials: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n  },\n};\n\nUpload.Dragger = Upload;\n","import { ISchema } from \"@formily/react\";\n\nexport const Switch: ISchema = {\n  type: \"object\",\n  properties: {\n    autoFocus: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n    size: {\n      type: \"string\",\n      enum: [\"large\", \"small\", \"default\", \"\"],\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Select\",\n      \"x-component-props\": {\n        defaultValue: \"default\",\n      },\n    },\n  },\n};\n","import { ISchema } from \"@formily/react\";\n\nexport const FormGrid: ISchema & { GridColumn?: ISchema } = {\n  type: \"object\",\n  properties: {\n    minWidth: {\n      type: \"number\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"NumberPicker\",\n      \"x-component-props\": {\n        defaultValue: 100,\n      },\n    },\n    maxWidth: {\n      type: \"number\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"NumberPicker\",\n    },\n    minColumns: {\n      type: \"number\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"NumberPicker\",\n      \"x-component-props\": {\n        defaultValue: 0,\n      },\n    },\n    maxColumns: {\n      type: \"number\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"NumberPicker\",\n    },\n    breakpoints: {\n      type: \"number\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"ValueInput\",\n      \"x-component-props\": {\n        include: [\"EXPRESSION\"],\n      },\n    },\n    columnGap: {\n      type: \"number\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"NumberPicker\",\n      \"x-component-props\": {\n        defaultValue: 10,\n      },\n    },\n    rowGap: {\n      type: \"number\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"NumberPicker\",\n      \"x-component-props\": {\n        defaultValue: 5,\n      },\n    },\n    colWrap: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n      \"x-component-props\": {\n        defaultChecked: true,\n      },\n    },\n  },\n};\n\nFormGrid.GridColumn = {\n  type: \"object\",\n  properties: {\n    gridSpan: {\n      type: \"number\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"NumberPicker\",\n      \"x-component-props\": {\n        defaultValue: 1,\n      },\n    },\n  },\n};\n","import { ISchema } from \"@formily/react\";\n\nexport const Space: ISchema = {\n  type: \"object\",\n  properties: {\n    align: {\n      type: \"string\",\n      enum: [\"start\", \"end\", \"center\", \"baseline\"],\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Select\",\n    },\n    direction: {\n      type: \"string\",\n      enum: [\"vertical\", \"horizontal\"],\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Radio.Group\",\n      \"x-component-props\": {\n        defaultValue: \"horizontal\",\n        optionType: \"button\",\n      },\n    },\n    size: {\n      type: \"number\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"NumberPicker\",\n      \"x-component-props\": {\n        defaultValue: 8,\n      },\n    },\n    split: {\n      type: \"string\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Input\",\n    },\n    wrap: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n  },\n};\n","import { ISchema } from \"@formily/react\";\n\nexport const FormTab: ISchema & { TabPane?: ISchema } = {\n  type: \"object\",\n  properties: {\n    animated: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n    centered: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n    size: {\n      type: \"string\",\n      enum: [\"large\", \"small\", \"default\", null],\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Select\",\n      \"x-component-props\": {\n        defaultValue: \"default\",\n      },\n    },\n    type: {\n      type: \"string\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Radio.Group\",\n      \"x-component-props\": {\n        defaultValue: \"line\",\n        optionType: \"button\",\n      },\n    },\n  },\n};\n\nFormTab.TabPane = {\n  type: \"object\",\n  properties: {\n    tab: {\n      type: \"string\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Input\",\n    },\n  },\n};\n","import { ISchema } from \"@formily/react\";\n\nexport const FormCollapse: ISchema & { CollapsePanel?: ISchema } = {\n  type: \"object\",\n  properties: {\n    accordion: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n    collapsible: {\n      type: \"string\",\n      enum: [\"header\", \"disabled\"],\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Radio.Group\",\n      \"x-component-props\": {\n        defaultValue: \"header\",\n        optionType: \"button\",\n      },\n    },\n    ghost: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n    bordered: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n      \"x-component-props\": {\n        defaultChecked: true,\n      },\n    },\n  },\n};\n\nFormCollapse.CollapsePanel = {\n  type: \"object\",\n  properties: {\n    collapsible: {\n      type: \"string\",\n      enum: [\"header\", \"disabled\"],\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Radio.Group\",\n      \"x-component-props\": {\n        defaultValue: \"header\",\n        optionType: \"button\",\n      },\n    },\n    header: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Input\",\n    },\n    extra: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Input\",\n    },\n  },\n};\n","import { ISchema } from \"@formily/react\";\n\nexport const ArrayTable: ISchema & { Addition?: ISchema; Column?: ISchema } = {\n  type: \"object\",\n  properties: {\n    bordered: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n      \"x-component-props\": {\n        defaultChecked: true,\n      },\n    },\n    showHeader: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n      \"x-component-props\": {\n        defaultChecked: true,\n      },\n    },\n    sticky: {\n      type: \"boolean\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Switch\",\n    },\n    size: {\n      type: \"string\",\n      enum: [\"large\", \"small\", \"middle\"],\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Select\",\n      \"x-component-props\": {\n        defaultValue: \"small\",\n      },\n    },\n    tableLayout: {\n      type: \"string\",\n      enum: [\"auto\", \"fixed\"],\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Radio.Group\",\n      \"x-component-props\": {\n        defaultValue: \"auto\",\n        optionType: \"button\",\n      },\n    },\n  },\n};\n\nconst Column: ISchema = {\n  type: \"object\",\n  properties: {\n    title: {\n      type: \"string\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Input\",\n    },\n    align: {\n      type: \"string\",\n      enum: [\"left\", \"right\", \"center\"],\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Radio.Group\",\n      \"x-component-props\": {\n        defaultValue: \"left\",\n        optionType: \"button\",\n      },\n    },\n    colSpan: {\n      type: \"number\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"NumberPicker\",\n    },\n    width: {\n      type: \"number\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"NumberPicker\",\n    },\n    fixed: {\n      type: \"string\",\n      enum: [\"left\", \"right\", false],\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Radio.Group\",\n      \"x-component-props\": {\n        optionType: \"button\",\n      },\n    },\n  },\n};\n\nconst Addition: ISchema = {\n  type: \"object\",\n  properties: {\n    method: {\n      type: \"string\",\n      enum: [\"push\", \"unshift\"],\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"Radio.Group\",\n      \"x-component-props\": {\n        defaultValue: \"push\",\n        optionType: \"button\",\n      },\n    },\n    defaultValue: {\n      type: \"string\",\n      \"x-decorator\": \"FormItem\",\n      \"x-component\": \"ValueInput\",\n    },\n  },\n};\n\nArrayTable.Column = Column;\nArrayTable.Addition = Addition;\n","import { ArrayTable } from \"./ArrayTable\";\nimport { Card } from \"./Card\";\n\nexport const ArrayCards = Card;\nArrayCards.Addition = ArrayTable.Addition;\n","import { ISchema } from \"@formily/json-schema\";\nimport { ReactionsSetter, DataSourceSetter, ValidatorSetter } from \"@designable/formily-setters\";\nimport { FormItemSwitcher } from \"../../common/FormItemSwitcher\";\nimport { AllSchemas } from \"../../schemas\";\n\nexport const createComponentSchema = (component: ISchema, decorator: ISchema) => {\n  return {\n    \"component-group\": component && {\n      type: \"void\",\n      \"x-component\": \"CollapseItem\",\n      \"x-reactions\": {\n        fulfill: {\n          state: {\n            visible: '{{!!$form.values[\"x-component\"]}}',\n          },\n        },\n      },\n      properties: {\n        \"x-component-props\": component,\n      },\n    },\n    \"decorator-group\": decorator && {\n      type: \"void\",\n      \"x-component\": \"CollapseItem\",\n      \"x-component-props\": { defaultExpand: false },\n      \"x-reactions\": {\n        fulfill: {\n          state: {\n            visible: '{{!!$form.values[\"x-decorator\"]}}',\n          },\n        },\n      },\n      properties: {\n        \"x-decorator-props\": decorator,\n      },\n    },\n    \"component-style-group\": {\n      type: \"void\",\n      \"x-component\": \"CollapseItem\",\n      \"x-component-props\": { defaultExpand: false },\n      \"x-reactions\": {\n        fulfill: {\n          state: {\n            visible: '{{!!$form.values[\"x-component\"]}}',\n          },\n        },\n      },\n      properties: {\n        \"x-component-props.style\": AllSchemas.CSSStyle,\n      },\n    },\n    \"decorator-style-group\": {\n      type: \"void\",\n      \"x-component\": \"CollapseItem\",\n      \"x-component-props\": { defaultExpand: false },\n      \"x-reactions\": {\n        fulfill: {\n          state: {\n            visible: '{{!!$form.values[\"x-decorator\"]}}',\n          },\n        },\n      },\n      properties: {\n        \"x-decorator-props.style\": AllSchemas.CSSStyle,\n      },\n    },\n  };\n};\n\nexport const createFieldSchema = (component?: ISchema, decorator: ISchema = AllSchemas.FormItem): ISchema => {\n  return {\n    type: \"object\",\n    properties: {\n      \"field-group\": {\n        type: \"void\",\n        \"x-component\": \"CollapseItem\",\n        properties: {\n          name: {\n            type: \"string\",\n            \"x-decorator\": \"FormItem\",\n            \"x-component\": \"Input\",\n          },\n          title: {\n            type: \"string\",\n            \"x-decorator\": \"FormItem\",\n            \"x-component\": \"Input\",\n          },\n          description: {\n            type: \"string\",\n            \"x-decorator\": \"FormItem\",\n            \"x-component\": \"Input.TextArea\",\n          },\n          \"x-display\": {\n            type: \"string\",\n            enum: [\"visible\", \"hidden\", \"none\", \"\"],\n            \"x-decorator\": \"FormItem\",\n            \"x-component\": \"Select\",\n            \"x-component-props\": {\n              defaultValue: \"visible\",\n            },\n          },\n          \"x-pattern\": {\n            type: \"string\",\n            enum: [\"editable\", \"disabled\", \"readOnly\", \"readPretty\", \"\"],\n            \"x-decorator\": \"FormItem\",\n            \"x-component\": \"Select\",\n            \"x-component-props\": {\n              defaultValue: \"editable\",\n            },\n          },\n          default: {\n            \"x-decorator\": \"FormItem\",\n            \"x-component\": \"ValueInput\",\n          },\n          enum: {\n            \"x-decorator\": \"FormItem\",\n            \"x-component\": DataSourceSetter,\n          },\n          \"x-reactions\": {\n            \"x-decorator\": \"FormItem\",\n            \"x-component\": ReactionsSetter,\n          },\n          \"x-validator\": {\n            type: \"array\",\n            \"x-component\": ValidatorSetter,\n          },\n          required: {\n            type: \"boolean\",\n            \"x-decorator\": \"FormItem\",\n            \"x-component\": \"Switch\",\n          },\n        },\n      },\n      ...createComponentSchema(component, decorator),\n    },\n  };\n};\n\nexport const createVoidFieldSchema = (component?: ISchema, decorator: ISchema = AllSchemas.FormItem) => {\n  return {\n    type: \"object\",\n    properties: {\n      \"field-group\": {\n        type: \"void\",\n        \"x-component\": \"CollapseItem\",\n        properties: {\n          name: {\n            type: \"string\",\n            \"x-decorator\": \"FormItem\",\n            \"x-component\": \"Input\",\n          },\n          title: {\n            type: \"string\",\n            \"x-decorator\": \"FormItem\",\n            \"x-component\": \"Input\",\n            \"x-reactions\": {\n              fulfill: {\n                state: {\n                  hidden: '{{$form.values[\"x-decorator\"] !== \"FormItem\"}}',\n                },\n              },\n            },\n          },\n          description: {\n            type: \"string\",\n            \"x-decorator\": \"FormItem\",\n            \"x-component\": \"Input.TextArea\",\n            \"x-reactions\": {\n              fulfill: {\n                state: {\n                  hidden: '{{$form.values[\"x-decorator\"] !== \"FormItem\"}}',\n                },\n              },\n            },\n          },\n          \"x-display\": {\n            type: \"string\",\n            enum: [\"visible\", \"hidden\", \"none\", \"\"],\n            \"x-decorator\": \"FormItem\",\n            \"x-component\": \"Select\",\n            \"x-component-props\": {\n              defaultValue: \"visible\",\n            },\n          },\n          \"x-pattern\": {\n            type: \"string\",\n            enum: [\"editable\", \"disabled\", \"readOnly\", \"readPretty\", \"\"],\n            \"x-decorator\": \"FormItem\",\n            \"x-component\": \"Select\",\n            \"x-component-props\": {\n              defaultValue: \"editable\",\n            },\n          },\n          \"x-reactions\": {\n            \"x-decorator\": \"FormItem\",\n            \"x-component\": ReactionsSetter,\n          },\n          \"x-decorator\": {\n            type: \"string\",\n            \"x-decorator\": \"FormItem\",\n            \"x-component\": FormItemSwitcher,\n          },\n        },\n      },\n      ...createComponentSchema(component, decorator),\n    },\n  };\n};\n","import React, { useMemo } from \"react\";\nimport { createBehavior, createResource } from \"@designable/core\";\nimport { createForm } from \"@formily/core\";\nimport { observer } from \"@formily/react\";\nimport { Form as FormilyForm } from \"@formily/antd\";\nimport { usePrefix, DnFC } from \"@designable/react\";\nimport { AllSchemas } from \"../../schemas\";\nimport { AllLocales } from \"../../locales\";\nimport \"./styles.less\";\n\nexport const Form: DnFC<React.ComponentProps<typeof FormilyForm>> = observer(props => {\n  const prefix = usePrefix(\"designable-form\");\n  const form = useMemo(\n    () =>\n      createForm({\n        designable: true,\n      }),\n    [],\n  );\n  return (\n    <FormilyForm {...props} style={{ ...props.style }} className={prefix} form={form}>\n      {props.children}\n    </FormilyForm>\n  );\n});\n\nForm.Behavior = createBehavior({\n  name: \"Form\",\n  selector: node => node.componentName === \"Form\",\n  designerProps(node) {\n    return {\n      draggable: !node.isRoot,\n      cloneable: !node.isRoot,\n      deletable: !node.isRoot,\n      droppable: true,\n      propsSchema: {\n        type: \"object\",\n        properties: {\n          ...(AllSchemas.FormLayout.properties as any),\n          style: AllSchemas.CSSStyle,\n        },\n      },\n      defaultProps: {\n        labelCol: 6,\n        wrapperCol: 12,\n      },\n    };\n  },\n  designerLocales: AllLocales.Form,\n});\n\nForm.Resource = createResource({\n  title: { \"ru-RU\": \"Форма\", \"en-US\": \"Form\" },\n  icon: \"FormLayoutSource\",\n  elements: [\n    {\n      componentName: \"Field\",\n      props: {\n        type: \"object\",\n        \"x-component\": \"Form\",\n      },\n    },\n  ],\n});\n","import React from \"react\";\nimport { Input as FormilyInput } from \"@formily/antd\";\nimport { createBehavior, createResource } from \"@designable/core\";\nimport { DnFC } from \"@designable/react\";\nimport { createFieldSchema } from \"../Field\";\nimport { AllSchemas } from \"../../schemas\";\nimport { AllLocales } from \"../../locales\";\n\nexport const Input: DnFC<React.ComponentProps<typeof FormilyInput>> = FormilyInput;\n\nInput.Behavior = createBehavior(\n  {\n    name: \"Input\",\n    extends: [\"Field\"],\n    selector: node => node.props[\"x-component\"] === \"Input\",\n    designerProps: {\n      propsSchema: createFieldSchema(AllSchemas.Input),\n    },\n    designerLocales: AllLocales.Input,\n  },\n  {\n    name: \"Input.TextArea\",\n    extends: [\"Field\"],\n    selector: node => node.props[\"x-component\"] === \"Input.TextArea\",\n    designerProps: {\n      propsSchema: createFieldSchema(AllSchemas.Input.TextArea),\n    },\n    designerLocales: AllLocales.TextArea,\n  },\n);\n\nInput.Resource = createResource(\n  {\n    icon: \"InputSource\",\n    elements: [\n      {\n        componentName: \"Field\",\n        props: {\n          type: \"string\",\n          title: \"Input\",\n          \"x-decorator\": \"FormItem\",\n          \"x-component\": \"Input\",\n        },\n      },\n    ],\n  },\n  {\n    icon: \"TextAreaSource\",\n    elements: [\n      {\n        componentName: \"Field\",\n        props: {\n          type: \"string\",\n          title: \"TextArea\",\n          \"x-decorator\": \"FormItem\",\n          \"x-component\": \"Input.TextArea\",\n        },\n      },\n    ],\n  },\n);\n","import React from \"react\";\nimport { Select as FormilySelect } from \"@formily/antd\";\nimport { createBehavior, createResource } from \"@designable/core\";\nimport { DnFC } from \"@designable/react\";\nimport { createFieldSchema } from \"../Field\";\nimport { AllSchemas } from \"../../schemas\";\nimport { AllLocales } from \"../../locales\";\n\nexport const Select: DnFC<React.ComponentProps<typeof FormilySelect>> = FormilySelect;\n\nSelect.Behavior = createBehavior({\n  name: \"Select\",\n  extends: [\"Field\"],\n  selector: node => node.props[\"x-component\"] === \"Select\",\n  designerProps: {\n    propsSchema: createFieldSchema(AllSchemas.Select),\n  },\n  designerLocales: AllLocales.Select,\n});\n\nSelect.Resource = createResource({\n  icon: \"SelectSource\",\n  elements: [\n    {\n      componentName: \"Field\",\n      props: {\n        title: \"Select\",\n        \"x-decorator\": \"FormItem\",\n        \"x-component\": \"Select\",\n      },\n    },\n  ],\n});\n","import React from \"react\";\nimport { TreeSelect as FormilyTreeSelect } from \"@formily/antd\";\nimport { createBehavior, createResource } from \"@designable/core\";\nimport { DnFC } from \"@designable/react\";\nimport { createFieldSchema } from \"../Field\";\nimport { AllSchemas } from \"../../schemas\";\nimport { AllLocales } from \"../../locales\";\n\nexport const TreeSelect: DnFC<React.ComponentProps<typeof FormilyTreeSelect>> = FormilyTreeSelect;\n\nTreeSelect.Behavior = createBehavior({\n  name: \"TreeSelect\",\n  extends: [\"Field\"],\n  selector: node => node.props[\"x-component\"] === \"TreeSelect\",\n  designerProps: {\n    propsSchema: createFieldSchema(AllSchemas.TreeSelect),\n  },\n  designerLocales: AllLocales.TreeSelect,\n});\n\nTreeSelect.Resource = createResource({\n  icon: \"TreeSelectSource\",\n  elements: [\n    {\n      componentName: \"Field\",\n      props: {\n        title: \"TreeSelect\",\n        \"x-decorator\": \"FormItem\",\n        \"x-component\": \"TreeSelect\",\n      },\n    },\n  ],\n});\n","import React from \"react\";\nimport { Cascader as FormilyCascader } from \"@formily/antd\";\nimport { createBehavior, createResource } from \"@designable/core\";\nimport { DnFC } from \"@designable/react\";\nimport { createFieldSchema } from \"../Field\";\nimport { AllSchemas } from \"../../schemas\";\nimport { AllLocales } from \"../../locales\";\n\nexport const Cascader: DnFC<React.ComponentProps<typeof FormilyCascader>> = FormilyCascader;\n\nCascader.Behavior = createBehavior({\n  name: \"Cascader\",\n  extends: [\"Field\"],\n  selector: node => node.props[\"x-component\"] === \"Cascader\",\n  designerProps: {\n    propsSchema: createFieldSchema(AllSchemas.Cascader),\n  },\n  designerLocales: AllLocales.Cascader,\n});\n\nCascader.Resource = createResource({\n  icon: \"CascaderSource\",\n  elements: [\n    {\n      componentName: \"Field\",\n      props: {\n        title: \"Cascader\",\n        \"x-decorator\": \"FormItem\",\n        \"x-component\": \"Cascader\",\n      },\n    },\n  ],\n});\n","import React from \"react\";\nimport { Radio as FormilyRadio } from \"@formily/antd\";\nimport { createBehavior, createResource } from \"@designable/core\";\nimport { DnFC } from \"@designable/react\";\nimport { createFieldSchema } from \"../Field\";\nimport { AllSchemas } from \"../../schemas\";\nimport { AllLocales } from \"../../locales\";\n\nexport const Radio: DnFC<React.ComponentProps<typeof FormilyRadio>> = FormilyRadio;\n\nRadio.Behavior = createBehavior({\n  name: \"Radio.Group\",\n  extends: [\"Field\"],\n  selector: node => node.props[\"x-component\"] === \"Radio.Group\",\n  designerProps: {\n    propsSchema: createFieldSchema(AllSchemas.Radio.Group),\n  },\n  designerLocales: AllLocales.RadioGroup,\n});\n\nRadio.Resource = createResource({\n  icon: \"RadioGroupSource\",\n  elements: [\n    {\n      componentName: \"Field\",\n      props: {\n        type: \"string | number\",\n        title: \"Radio Group\",\n        \"x-decorator\": \"FormItem\",\n        \"x-component\": \"Radio.Group\",\n        enum: [\n          { label: \"选项1\", value: 1 },\n          { label: \"选项2\", value: 2 },\n        ],\n      },\n    },\n  ],\n});\n","import React from \"react\";\nimport { Checkbox as FormilyCheckbox } from \"@formily/antd\";\nimport { createBehavior, createResource } from \"@designable/core\";\nimport { DnFC } from \"@designable/react\";\nimport { createFieldSchema } from \"../Field\";\nimport { AllSchemas } from \"../../schemas\";\nimport { AllLocales } from \"../../locales\";\n\nexport const Checkbox: DnFC<React.ComponentProps<typeof FormilyCheckbox>> = FormilyCheckbox;\n\nCheckbox.Behavior = createBehavior({\n  name: \"Checkbox.Group\",\n  extends: [\"Field\"],\n  selector: node => node.props[\"x-component\"] === \"Checkbox.Group\",\n  designerProps: {\n    propsSchema: createFieldSchema(AllSchemas.Checkbox.Group),\n  },\n  designerLocales: AllLocales.CheckboxGroup,\n});\n\nCheckbox.Resource = createResource({\n  icon: \"CheckboxGroupSource\",\n  elements: [\n    {\n      componentName: \"Field\",\n      props: {\n        type: \"Array<string | number>\",\n        title: \"Checkbox Group\",\n        \"x-decorator\": \"FormItem\",\n        \"x-component\": \"Checkbox.Group\",\n        enum: [\n          { label: \"选项1\", value: 1 },\n          { label: \"选项2\", value: 2 },\n        ],\n      },\n    },\n  ],\n});\n","import React from \"react\";\nimport { Slider as AntdSlider } from \"antd\";\nimport { createBehavior, createResource } from \"@designable/core\";\nimport { DnFC } from \"@designable/react\";\nimport { createFieldSchema } from \"../Field\";\nimport { AllSchemas } from \"../../schemas\";\nimport { AllLocales } from \"../../locales\";\n\nexport const Slider: DnFC<React.ComponentProps<typeof AntdSlider>> = AntdSlider;\n\nSlider.Behavior = createBehavior({\n  name: \"Slider\",\n  extends: [\"Field\"],\n  selector: node => node.props[\"x-component\"] === \"Slider\",\n  designerProps: {\n    propsSchema: createFieldSchema(AllSchemas.Slider),\n  },\n  designerLocales: AllLocales.Slider,\n});\n\nSlider.Resource = createResource({\n  icon: \"SliderSource\",\n  elements: [\n    {\n      componentName: \"Field\",\n      props: {\n        type: \"number\",\n        title: \"Slider\",\n        \"x-decorator\": \"FormItem\",\n        \"x-component\": \"Slider\",\n      },\n    },\n  ],\n});\n","import React from \"react\";\nimport { Rate as AntdRate } from \"antd\";\nimport { createBehavior, createResource } from \"@designable/core\";\nimport { DnFC } from \"@designable/react\";\nimport { createFieldSchema } from \"../Field\";\nimport { AllSchemas } from \"../../schemas\";\nimport { AllLocales } from \"../../locales\";\n\nexport const Rate: DnFC<React.ComponentProps<typeof AntdRate>> = AntdRate;\n\nRate.Behavior = createBehavior({\n  name: \"Rate\",\n  extends: [\"Field\"],\n  selector: node => node.props[\"x-component\"] === \"Rate\",\n  designerProps: {\n    propsSchema: createFieldSchema(AllSchemas.Rate),\n  },\n  designerLocales: AllLocales.Rate,\n});\n\nRate.Resource = createResource({\n  icon: \"RateSource\",\n  elements: [\n    {\n      componentName: \"Field\",\n      props: {\n        type: \"number\",\n        title: \"Rate\",\n        \"x-decorator\": \"FormItem\",\n        \"x-component\": \"Rate\",\n      },\n    },\n  ],\n});\n","import React from \"react\";\nimport { NumberPicker as FormilyNumberPicker } from \"@formily/antd\";\nimport { createBehavior, createResource } from \"@designable/core\";\nimport { DnFC } from \"@designable/react\";\nimport { createFieldSchema } from \"../Field\";\nimport { AllSchemas } from \"../../schemas\";\nimport { AllLocales } from \"../../locales\";\n\nexport const NumberPicker: DnFC<React.ComponentProps<typeof FormilyNumberPicker>> = FormilyNumberPicker;\n\nNumberPicker.Behavior = createBehavior({\n  name: \"NumberPicker\",\n  extends: [\"Field\"],\n  selector: node => node.props[\"x-component\"] === \"NumberPicker\",\n  designerProps: {\n    propsSchema: createFieldSchema(AllSchemas.NumberPicker),\n  },\n  designerLocales: AllLocales.NumberPicker,\n});\n\nNumberPicker.Resource = createResource({\n  icon: \"NumberPickerSource\",\n  elements: [\n    {\n      componentName: \"Field\",\n      props: {\n        type: \"number\",\n        title: \"NumberPicker\",\n        \"x-decorator\": \"FormItem\",\n        \"x-component\": \"NumberPicker\",\n      },\n    },\n  ],\n});\n","import React from \"react\";\nimport { Transfer as FormilyTransfer } from \"@formily/antd\";\nimport { createBehavior, createResource } from \"@designable/core\";\nimport { DnFC } from \"@designable/react\";\nimport { createFieldSchema } from \"../Field\";\nimport { AllSchemas } from \"../../schemas\";\nimport { AllLocales } from \"../../locales\";\n\nexport const Transfer: DnFC<React.ComponentProps<typeof FormilyTransfer>> = FormilyTransfer;\n\nTransfer.Behavior = createBehavior({\n  name: \"Transfer\",\n  extends: [\"Field\"],\n  selector: node => node.props[\"x-component\"] === \"Transfer\",\n  designerProps: {\n    propsSchema: createFieldSchema(AllSchemas.Transfer),\n  },\n  designerLocales: AllLocales.Transfer,\n});\n\nTransfer.Resource = createResource({\n  icon: \"TransferSource\",\n  elements: [\n    {\n      componentName: \"Field\",\n      props: {\n        title: \"Transfer\",\n        \"x-decorator\": \"FormItem\",\n        \"x-component\": \"Transfer\",\n      },\n    },\n  ],\n});\n","import React from \"react\";\nimport { Password as FormilyPassword } from \"@formily/antd\";\nimport { createBehavior, createResource } from \"@designable/core\";\nimport { DnFC } from \"@designable/react\";\nimport { createFieldSchema } from \"../Field\";\nimport { AllSchemas } from \"../../schemas\";\nimport { AllLocales } from \"../../locales\";\n\nexport const Password: DnFC<React.ComponentProps<typeof FormilyPassword>> = FormilyPassword;\n\nPassword.Behavior = createBehavior({\n  name: \"Password\",\n  extends: [\"Field\"],\n  selector: node => node.props[\"x-component\"] === \"Password\",\n  designerProps: {\n    propsSchema: createFieldSchema(AllSchemas.Password),\n  },\n  designerLocales: AllLocales.Password,\n});\n\nPassword.Resource = createResource({\n  icon: \"PasswordSource\",\n  elements: [\n    {\n      componentName: \"Field\",\n      props: {\n        title: \"Password\",\n        \"x-decorator\": \"FormItem\",\n        \"x-component\": \"Password\",\n      },\n    },\n  ],\n});\n","import React from \"react\";\nimport { DatePicker as FormilyDatePicker } from \"@formily/antd\";\nimport { createBehavior, createResource } from \"@designable/core\";\nimport { DnFC } from \"@designable/react\";\nimport { createFieldSchema } from \"../Field\";\nimport { AllSchemas } from \"../../schemas\";\nimport { AllLocales } from \"../../locales\";\n\nexport const DatePicker: DnFC<React.ComponentProps<typeof FormilyDatePicker>> = FormilyDatePicker;\n\nDatePicker.Behavior = createBehavior(\n  {\n    name: \"DatePicker\",\n    extends: [\"Field\"],\n    selector: node => node.props[\"x-component\"] === \"DatePicker\",\n    designerProps: {\n      propsSchema: createFieldSchema(AllSchemas.DatePicker),\n    },\n    designerLocales: AllLocales.DatePicker,\n  },\n  {\n    name: \"DatePicker.RangePicker\",\n    extends: [\"Field\"],\n    selector: node => node.props[\"x-component\"] === \"DatePicker.RangePicker\",\n    designerProps: {\n      propsSchema: createFieldSchema(AllSchemas.DatePicker.RangePicker),\n    },\n    designerLocales: AllLocales.DateRangePicker,\n  },\n);\n\nDatePicker.Resource = createResource(\n  {\n    icon: \"DatePickerSource\",\n    elements: [\n      {\n        componentName: \"Field\",\n        props: {\n          type: \"string\",\n          title: \"DatePicker\",\n          \"x-decorator\": \"FormItem\",\n          \"x-component\": \"DatePicker\",\n        },\n      },\n    ],\n  },\n  {\n    icon: \"DateRangePickerSource\",\n    elements: [\n      {\n        componentName: \"Field\",\n        props: {\n          type: \"string[]\",\n          title: \"DateRangePicker\",\n          \"x-decorator\": \"FormItem\",\n          \"x-component\": \"DatePicker.RangePicker\",\n        },\n      },\n    ],\n  },\n);\n","import React from \"react\";\nimport { TimePicker as FormilyTimePicker } from \"@formily/antd\";\nimport { createBehavior, createResource } from \"@designable/core\";\nimport { DnFC } from \"@designable/react\";\nimport { createFieldSchema } from \"../Field\";\nimport { AllSchemas } from \"../../schemas\";\nimport { AllLocales } from \"../../locales\";\n\nexport const TimePicker: DnFC<React.ComponentProps<typeof FormilyTimePicker>> = FormilyTimePicker;\n\nTimePicker.Behavior = createBehavior(\n  {\n    name: \"TimePicker\",\n    extends: [\"Field\"],\n    selector: node => node.props[\"x-component\"] === \"TimePicker\",\n    designerProps: {\n      propsSchema: createFieldSchema(AllSchemas.TimePicker),\n    },\n    designerLocales: AllLocales.TimePicker,\n  },\n  {\n    name: \"TimePicker.RangePicker\",\n    extends: [\"Field\"],\n    selector: node => node.props[\"x-component\"] === \"TimePicker.RangePicker\",\n    designerProps: {\n      propsSchema: createFieldSchema(AllSchemas.TimePicker.RangePicker),\n    },\n    designerLocales: AllLocales.TimeRangePicker,\n  },\n);\n\nTimePicker.Resource = createResource(\n  {\n    icon: \"TimePickerSource\",\n    elements: [\n      {\n        componentName: \"Field\",\n        props: {\n          type: \"string\",\n          title: \"TimePicker\",\n          \"x-decorator\": \"FormItem\",\n          \"x-component\": \"TimePicker\",\n        },\n      },\n    ],\n  },\n  {\n    icon: \"TimeRangePickerSource\",\n    elements: [\n      {\n        componentName: \"Field\",\n        props: {\n          type: \"string[]\",\n          title: \"TimeRangePicker\",\n          \"x-decorator\": \"FormItem\",\n          \"x-component\": \"TimePicker.RangePicker\",\n        },\n      },\n    ],\n  },\n);\n","import React from \"react\";\nimport { Upload as FormilyUpload } from \"@formily/antd\";\nimport { createBehavior, createResource } from \"@designable/core\";\nimport { DnFC } from \"@designable/react\";\nimport { createFieldSchema } from \"../Field\";\nimport { AllSchemas } from \"../../schemas\";\nimport { AllLocales } from \"../../locales\";\n\nexport const Upload: DnFC<React.ComponentProps<typeof FormilyUpload>> = FormilyUpload;\n\nUpload.Behavior = createBehavior(\n  {\n    name: \"Upload\",\n    extends: [\"Field\"],\n    selector: node => node.props[\"x-component\"] === \"Upload\",\n    designerProps: {\n      propsSchema: createFieldSchema(AllSchemas.Upload),\n    },\n    designerLocales: AllLocales.Upload,\n  },\n  {\n    name: \"Upload.Dragger\",\n    extends: [\"Field\"],\n    selector: node => node.props[\"x-component\"] === \"Upload.Dragger\",\n    designerProps: {\n      propsSchema: createFieldSchema(AllSchemas.Upload.Dragger),\n    },\n    designerLocales: AllLocales.UploadDragger,\n  },\n);\n\nUpload.Resource = createResource(\n  {\n    icon: \"UploadSource\",\n    elements: [\n      {\n        componentName: \"Field\",\n        props: {\n          type: \"Array<object>\",\n          title: \"Upload\",\n          \"x-decorator\": \"FormItem\",\n          \"x-component\": \"Upload\",\n          \"x-component-props\": {\n            textContent: \"Upload\",\n          },\n        },\n      },\n    ],\n  },\n  {\n    icon: \"UploadDraggerSource\",\n    elements: [\n      {\n        componentName: \"Field\",\n        props: {\n          type: \"Array<object>\",\n          title: \"Drag Upload\",\n          \"x-decorator\": \"FormItem\",\n          \"x-component\": \"Upload.Dragger\",\n          \"x-component-props\": {\n            textContent: \"Click or drag file to this area to upload\",\n          },\n        },\n      },\n    ],\n  },\n);\n","import React from \"react\";\nimport { Switch as AntdSwitch } from \"antd\";\nimport { createBehavior, createResource } from \"@designable/core\";\nimport { DnFC } from \"@designable/react\";\nimport { createFieldSchema } from \"../Field\";\nimport { AllSchemas } from \"../../schemas\";\nimport { AllLocales } from \"../../locales\";\n\nexport const Switch: DnFC<React.ComponentProps<typeof AntdSwitch>> = AntdSwitch;\n\nSwitch.Behavior = createBehavior({\n  name: \"Switch\",\n  extends: [\"Field\"],\n  selector: node => node.props[\"x-component\"] === \"Switch\",\n  designerProps: {\n    propsSchema: createFieldSchema(AllSchemas.Switch),\n  },\n  designerLocales: AllLocales.Switch,\n});\n\nSwitch.Resource = createResource({\n  icon: \"SwitchSource\",\n  elements: [\n    {\n      componentName: \"Field\",\n      props: {\n        type: \"boolean\",\n        title: \"Switch\",\n        \"x-decorator\": \"FormItem\",\n        \"x-component\": \"Switch\",\n      },\n    },\n  ],\n});\n","import React from \"react\";\nimport { createBehavior, createResource } from \"@designable/core\";\nimport { DnFC } from \"@designable/react\";\nimport { createVoidFieldSchema } from \"../Field\";\nimport { AllSchemas } from \"../../schemas\";\nimport { AllLocales } from \"../../locales\";\nimport cls from \"classnames\";\nimport \"./styles.less\";\n\nexport interface IDesignableTextProps {\n  value?: string;\n  content?: string;\n  mode?: \"normal\" | \"h1\" | \"h2\" | \"h3\" | \"p\";\n  style?: React.CSSProperties;\n  className?: string;\n}\n\nexport const Text: DnFC<IDesignableTextProps> = ({\n  mode, // eslint-disable-line react/prop-types\n  className, // eslint-disable-line react/prop-types\n  content, // eslint-disable-line react/prop-types\n  ...props\n}) => {\n  const tagName = mode === \"normal\" || !mode ? \"div\" : mode;\n  return React.createElement(\n    tagName,\n    {\n      mode,\n      content,\n      ...props,\n      className: cls(className, \"dn-text\"),\n      \"data-content-editable\": \"x-component-props.content\",\n    },\n    content,\n  );\n};\n\nText.Behavior = createBehavior({\n  name: \"Text\",\n  extends: [\"Field\"],\n  selector: node => node.props[\"x-component\"] === \"Text\",\n  designerProps: {\n    propsSchema: createVoidFieldSchema(AllSchemas.Text),\n  },\n  designerLocales: AllLocales.Text,\n});\n\nText.Resource = createResource({\n  icon: \"TextSource\",\n  elements: [\n    {\n      componentName: \"Field\",\n      props: {\n        type: \"string\",\n        \"x-component\": \"Text\",\n      },\n    },\n  ],\n});\n","import React from \"react\";\nimport { Card as AntdCard } from \"antd\";\n\nimport { createBehavior, createResource } from \"@designable/core\";\nimport { DnFC } from \"@designable/react\";\nimport { createVoidFieldSchema } from \"../Field\";\nimport { AllSchemas } from \"../../schemas\";\nimport { AllLocales } from \"../../locales\";\n\nexport const Card: DnFC<React.ComponentProps<typeof AntdCard>> = props => {\n  // eslint-disable-next-line react/prop-types\n  const { title, children } = props;\n\n  return (\n    <AntdCard {...props} title={<span data-content-editable=\"x-component-props.title\">{title}</span>}>\n      {children}\n    </AntdCard>\n  );\n};\n\nCard.Behavior = createBehavior({\n  name: \"Card\",\n  extends: [\"Field\"],\n  selector: node => node.props[\"x-component\"] === \"Card\",\n  designerProps: {\n    droppable: true,\n    propsSchema: createVoidFieldSchema(AllSchemas.Card),\n  },\n  designerLocales: AllLocales.Card,\n});\n\nCard.Resource = createResource({\n  icon: \"CardSource\",\n  elements: [\n    {\n      componentName: \"Field\",\n      props: {\n        type: \"void\",\n        \"x-component\": \"Card\",\n        \"x-component-props\": {\n          title: \"Title\",\n        },\n      },\n    },\n  ],\n});\n","import React from \"react\";\nimport { Space as FormilySpace } from \"@formily/antd\";\nimport { createBehavior, createResource } from \"@designable/core\";\nimport { DnFC } from \"@designable/react\";\nimport { createVoidFieldSchema } from \"../Field\";\nimport { withContainer } from \"../../common/Container\";\nimport { AllSchemas } from \"../../schemas\";\nimport { AllLocales } from \"../../locales\";\n\nexport const Space: DnFC<React.ComponentProps<typeof FormilySpace>> = withContainer(FormilySpace);\n\nSpace.Behavior = createBehavior({\n  name: \"Space\",\n  extends: [\"Field\"],\n  selector: node => node.props[\"x-component\"] === \"Space\",\n  designerProps: {\n    droppable: true,\n    inlineChildrenLayout: true,\n    propsSchema: createVoidFieldSchema(AllSchemas.Space),\n  },\n  designerLocales: AllLocales.Space,\n});\n\nSpace.Resource = createResource({\n  icon: \"SpaceSource\",\n  elements: [\n    {\n      componentName: \"Field\",\n      props: {\n        type: \"void\",\n        \"x-component\": \"Space\",\n      },\n    },\n  ],\n});\n","import React from \"react\";\nimport { createBehavior, createResource } from \"@designable/core\";\nimport { DnFC } from \"@designable/react\";\nimport { createFieldSchema } from \"../Field\";\nimport { Container } from \"../../common/Container\";\nimport { AllLocales } from \"../../locales\";\n\nexport const ObjectContainer: DnFC<React.ComponentProps<typeof Container>> = Container;\nObjectContainer.Behavior = createBehavior({\n  name: \"Object\",\n  extends: [\"Field\"],\n  selector: node => node.props.type === \"object\",\n  designerProps: {\n    droppable: true,\n    propsSchema: createFieldSchema(),\n  },\n  designerLocales: AllLocales.ObjectLocale,\n});\n\nObjectContainer.Resource = createResource({\n  icon: \"ObjectSource\",\n  elements: [\n    {\n      componentName: \"Field\",\n      props: {\n        type: \"object\",\n      },\n    },\n  ],\n});\n","import React from \"react\";\nimport { NodeActionsWidget } from \"@designable/react\";\n\nexport interface ITemplateAction {\n  title: React.ReactNode;\n  tooltip?: React.ReactNode;\n  icon?: string | React.ReactNode;\n  onClick: () => void;\n}\n\nexport interface ILoadTemplateProps {\n  className?: string;\n  style?: React.CSSProperties;\n  actions?: ITemplateAction[];\n}\n\nexport const LoadTemplate: React.FC<ILoadTemplateProps> = props => {\n  return (\n    <NodeActionsWidget>\n      {props.actions?.map((action, key) => {\n        return <NodeActionsWidget.Action {...action} key={key} />;\n      })}\n    </NodeActionsWidget>\n  );\n};\n","import { TreeNode, Engine } from \"@designable/core\";\n\nexport type ComponentNameMatcher = string | string[] | ((name: string, node: TreeNode, context?: any) => boolean);\n\nexport const matchComponent = (node: TreeNode, name: ComponentNameMatcher, context?: any) => {\n  if (name === \"*\") {\n    return true;\n  }\n  const componentName = node?.props?.[\"x-component\"];\n  if (typeof name === \"function\") {\n    return name(componentName || \"\", node, context);\n  }\n  if (Array.isArray(name)) {\n    return name.includes(componentName);\n  }\n  return componentName === name;\n};\n\nexport const matchChildComponent = (node: TreeNode, name: ComponentNameMatcher, context?: any) => {\n  if (name === \"*\") {\n    return true;\n  }\n  const componentName = node?.props?.[\"x-component\"];\n  if (!componentName) {\n    return false;\n  }\n  if (typeof name === \"function\") {\n    return name(componentName || \"\", node, context);\n  }\n  if (Array.isArray(name)) {\n    return name.includes(componentName);\n  }\n  return componentName.indexOf(`${name}.`) > -1;\n};\n\nexport const includesComponent = (node: TreeNode, names: ComponentNameMatcher[], target?: TreeNode) => {\n  return names.some(name => matchComponent(node, name, target));\n};\n\nexport const queryNodesByComponentPath = (node: TreeNode, path: ComponentNameMatcher[]): TreeNode[] => {\n  if (path?.length === 0) {\n    return [];\n  }\n  if (path?.length === 1) {\n    if (matchComponent(node, path[0])) {\n      return [node];\n    }\n  }\n  return matchComponent(node, path[0])\n    ? node.children.reduce((buf, child) => {\n        return buf.concat(queryNodesByComponentPath(child, path.slice(1)));\n      }, [])\n    : [];\n};\n\nexport const findNodeByComponentPath = (node: TreeNode, path: ComponentNameMatcher[]): TreeNode => {\n  if (path?.length === 0) {\n    return;\n  }\n  if (path?.length === 1) {\n    if (matchComponent(node, path[0])) {\n      return node;\n    }\n  }\n  if (matchComponent(node, path[0])) {\n    for (let i = 0; i < node.children.length; i++) {\n      const next = findNodeByComponentPath(node.children[i], path.slice(1));\n      if (next) {\n        return next;\n      }\n    }\n  }\n};\n\nexport const hasNodeByComponentPath = (node: TreeNode, path: ComponentNameMatcher[]) => !!findNodeByComponentPath(node, path);\n\nexport const matchArrayItemsNode = (node: TreeNode) => {\n  return node?.parent?.props?.type === \"array\" && node?.parent?.children?.[0] === node;\n};\n\nexport const createNodeId = (designer: Engine, id: string) => {\n  return {\n    [designer.props.nodeIdAttrName]: id,\n  };\n};\n\nexport const createEnsureTypeItemsNode = (type: string) => (node: TreeNode) => {\n  const objectNode = node.children.find(child => child.props[\"type\"] === type);\n  if (objectNode) {\n    return objectNode;\n  } else {\n    const newObjectNode = new TreeNode({\n      componentName: \"Field\",\n      props: {\n        type,\n      },\n    });\n    node.prepend(newObjectNode);\n    return newObjectNode;\n  }\n};\n","import { AppendNodeEvent, TreeNode } from \"@designable/core\";\nimport { useDesigner } from \"@designable/react\";\nimport { matchComponent, matchChildComponent } from \"../shared\";\n\nexport const useDropTemplate = (name: string, getChildren: (source: TreeNode[]) => TreeNode[]) => {\n  return useDesigner(designer => {\n    return designer.subscribeTo(AppendNodeEvent, event => {\n      const { source, target } = event.data;\n      if (Array.isArray(target)) {\n        return;\n      }\n      if (!Array.isArray(source)) {\n        return;\n      }\n      if (\n        matchComponent(target, key => key === name && source.every(child => !matchChildComponent(child, name))) &&\n        target.children.length === 0\n      ) {\n        target.setChildren(...getChildren(source));\n        return false;\n      }\n    });\n  });\n};\n","import { createBehavior } from \"@designable/core\";\nimport { createFieldSchema, createVoidFieldSchema } from \"../Field\";\nimport { AllSchemas } from \"../../schemas\";\nimport { AllLocales } from \"../../locales\";\n\nexport const createArrayBehavior = (name: string) => {\n  return createBehavior(\n    {\n      name,\n      extends: [\"Field\"],\n      selector: node => node.props[\"x-component\"] === name,\n      designerProps: {\n        droppable: true,\n        propsSchema: createFieldSchema(AllSchemas[name]),\n      },\n      designerLocales: AllLocales[name],\n    },\n    {\n      name: `${name}.Addition`,\n      extends: [\"Field\"],\n      selector: node => node.props[\"x-component\"] === `${name}.Addition`,\n      designerProps: {\n        allowDrop(parent) {\n          return parent.props[\"x-component\"] === name;\n        },\n        propsSchema: createVoidFieldSchema(AllSchemas[name].Addition),\n      },\n      designerLocales: AllLocales.ArrayAddition,\n    },\n    {\n      name: `${name}.Remove`,\n      extends: [\"Field\"],\n      selector: node => node.props[\"x-component\"] === `${name}.Remove`,\n      designerProps: {\n        allowDrop(parent) {\n          return parent.props[\"x-component\"] === name;\n        },\n        propsSchema: createVoidFieldSchema(),\n      },\n      designerLocales: AllLocales.ArrayRemove,\n    },\n    {\n      name: `${name}.Index`,\n      extends: [\"Field\"],\n      selector: node => node.props[\"x-component\"] === `${name}.Index`,\n      designerProps: {\n        allowDrop(parent) {\n          return parent.props[\"x-component\"] === name;\n        },\n        propsSchema: createVoidFieldSchema(),\n      },\n      designerLocales: AllLocales.ArrayIndex,\n    },\n    {\n      name: `${name}.MoveUp`,\n      extends: [\"Field\"],\n      selector: node => node.props[\"x-component\"] === `${name}.MoveUp`,\n      designerProps: {\n        allowDrop(parent) {\n          return parent.props[\"x-component\"] === name;\n        },\n        propsSchema: createVoidFieldSchema(),\n      },\n      designerLocales: AllLocales.ArrayMoveUp,\n    },\n    {\n      name: `${name}.MoveDown`,\n      extends: [\"Field\"],\n      selector: node => node.props[\"x-component\"] === `${name}.MoveDown`,\n      designerProps: {\n        allowDrop(parent) {\n          return parent.props[\"x-component\"] === \"ArrayCards\";\n        },\n        propsSchema: createVoidFieldSchema(),\n      },\n      designerLocales: AllLocales.ArrayMoveDown,\n    },\n  );\n};\n","import React, { Fragment } from \"react\";\nimport { Card, CardProps } from \"antd\";\nimport { TreeNode, createResource } from \"@designable/core\";\nimport { useTreeNode, TreeNodeWidget, DroppableWidget, useNodeIdProps, DnFC } from \"@designable/react\";\nimport { ArrayBase } from \"@formily/antd\";\nimport { observer } from \"@formily/react\";\nimport { LoadTemplate } from \"../../common/LoadTemplate\";\nimport { useDropTemplate } from \"../../hooks\";\nimport {\n  hasNodeByComponentPath,\n  queryNodesByComponentPath,\n  createEnsureTypeItemsNode,\n  findNodeByComponentPath,\n  createNodeId,\n} from \"../../shared\";\nimport { createArrayBehavior } from \"../ArrayBase\";\nimport cls from \"classnames\";\nimport \"./styles.less\";\n\nconst ensureObjectItemsNode = createEnsureTypeItemsNode(\"object\");\n\nconst isArrayCardsOperation = (name: string) =>\n  name === \"ArrayCards.Remove\" || name === \"ArrayCards.MoveDown\" || name === \"ArrayCards.MoveUp\";\n\nexport const ArrayCards: DnFC<CardProps> = observer(props => {\n  const node = useTreeNode();\n  const nodeId = useNodeIdProps();\n  const designer = useDropTemplate(\"ArrayCards\", source => {\n    const indexNode = new TreeNode({\n      componentName: node.componentName,\n      props: {\n        type: \"void\",\n        \"x-component\": \"ArrayCards.Index\",\n      },\n    });\n    const additionNode = new TreeNode({\n      componentName: node.componentName,\n      props: {\n        type: \"void\",\n        title: \"Addition\",\n        \"x-component\": \"ArrayCards.Addition\",\n      },\n    });\n    const removeNode = new TreeNode({\n      componentName: node.componentName,\n      props: {\n        type: \"void\",\n        title: \"Addition\",\n        \"x-component\": \"ArrayCards.Remove\",\n      },\n    });\n    const moveDownNode = new TreeNode({\n      componentName: node.componentName,\n      props: {\n        type: \"void\",\n        title: \"Addition\",\n        \"x-component\": \"ArrayCards.MoveDown\",\n      },\n    });\n    const moveUpNode = new TreeNode({\n      componentName: node.componentName,\n      props: {\n        type: \"void\",\n        title: \"Addition\",\n        \"x-component\": \"ArrayCards.MoveUp\",\n      },\n    });\n\n    const objectNode = new TreeNode({\n      componentName: node.componentName,\n      props: {\n        type: \"object\",\n      },\n      children: [indexNode, ...source, removeNode, moveDownNode, moveUpNode],\n    });\n    return [objectNode, additionNode];\n  });\n  const renderCard = () => {\n    if (node.children.length === 0) {\n      return <DroppableWidget />;\n    }\n    const additions = queryNodesByComponentPath(node, [\"ArrayCards\", \"ArrayCards.Addition\"]);\n    const indexes = queryNodesByComponentPath(node, [\"ArrayCards\", \"*\", \"ArrayCards.Index\"]);\n    const operations = queryNodesByComponentPath(node, [\"ArrayCards\", \"*\", isArrayCardsOperation]);\n    const children = queryNodesByComponentPath(node, [\"ArrayCards\", \"*\", name => name.indexOf(\"ArrayCards.\") === -1]);\n    return (\n      <ArrayBase disabled>\n        <ArrayBase.Item index={0} record={null}>\n          <Card\n            {...props}\n            title={\n              <Fragment>\n                {indexes.map((node, key) => (\n                  <TreeNodeWidget key={key} node={node} />\n                ))}\n                <span data-content-editable=\"x-component-props.title\">{props.title}</span>\n              </Fragment>\n            }\n            className={cls(\"ant-formily-array-cards-item\", props.className)}\n            extra={\n              <Fragment>\n                {operations.map(node => (\n                  <TreeNodeWidget key={node.id} node={node} />\n                ))}\n                {props.extra}\n              </Fragment>\n            }\n          >\n            <div {...createNodeId(designer, ensureObjectItemsNode(node).id)}>\n              {children.length ? (\n                children.map(node => <TreeNodeWidget key={node.id} node={node} />)\n              ) : (\n                <DroppableWidget hasChildren={false} />\n              )}\n            </div>\n          </Card>\n        </ArrayBase.Item>\n        {additions.map(node => (\n          <TreeNodeWidget key={node.id} node={node} />\n        ))}\n      </ArrayBase>\n    );\n  };\n\n  return (\n    <div {...nodeId} className=\"dn-array-cards\">\n      {renderCard()}\n      <LoadTemplate\n        actions={[\n          {\n            title: node.getMessage(\"addIndex\"),\n            icon: \"AddIndex\",\n            onClick: () => {\n              if (hasNodeByComponentPath(node, [\"ArrayCards\", \"*\", \"ArrayCards.Index\"])) {\n                return;\n              }\n              const indexNode = new TreeNode({\n                componentName: node.componentName,\n                props: {\n                  type: \"void\",\n                  \"x-component\": \"ArrayCards.Index\",\n                },\n              });\n              ensureObjectItemsNode(node).append(indexNode);\n            },\n          },\n\n          {\n            title: node.getMessage(\"addOperation\"),\n            icon: \"AddOperation\",\n            onClick: () => {\n              const oldAdditionNode = findNodeByComponentPath(node, [\"ArrayCards\", \"ArrayCards.Addition\"]);\n              if (!oldAdditionNode) {\n                const additionNode = new TreeNode({\n                  componentName: node.componentName,\n                  props: {\n                    type: \"void\",\n                    title: \"Addition\",\n                    \"x-component\": \"ArrayCards.Addition\",\n                  },\n                });\n                ensureObjectItemsNode(node).insertAfter(additionNode);\n              }\n              const oldRemoveNode = findNodeByComponentPath(node, [\"ArrayCards\", \"*\", \"ArrayCards.Remove\"]);\n              const oldMoveDownNode = findNodeByComponentPath(node, [\"ArrayCards\", \"*\", \"ArrayCards.MoveDown\"]);\n              const oldMoveUpNode = findNodeByComponentPath(node, [\"ArrayCards\", \"*\", \"ArrayCards.MoveUp\"]);\n              if (!oldRemoveNode) {\n                ensureObjectItemsNode(node).append(\n                  new TreeNode({\n                    componentName: node.componentName,\n                    props: {\n                      type: \"void\",\n                      \"x-component\": \"ArrayCards.Remove\",\n                    },\n                  }),\n                );\n              }\n              if (!oldMoveDownNode) {\n                ensureObjectItemsNode(node).append(\n                  new TreeNode({\n                    componentName: node.componentName,\n                    props: {\n                      type: \"void\",\n                      \"x-component\": \"ArrayCards.MoveDown\",\n                    },\n                  }),\n                );\n              }\n              if (!oldMoveUpNode) {\n                ensureObjectItemsNode(node).append(\n                  new TreeNode({\n                    componentName: node.componentName,\n                    props: {\n                      type: \"void\",\n                      \"x-component\": \"ArrayCards.MoveUp\",\n                    },\n                  }),\n                );\n              }\n            },\n          },\n        ]}\n      />\n    </div>\n  );\n});\n\nArrayBase.mixin(ArrayCards);\n\nArrayCards.Behavior = createArrayBehavior(\"ArrayCards\");\n\nArrayCards.Resource = createResource({\n  icon: \"ArrayCardsSource\",\n  elements: [\n    {\n      componentName: \"Field\",\n      props: {\n        type: \"array\",\n        \"x-decorator\": \"FormItem\",\n        \"x-component\": \"ArrayCards\",\n        \"x-component-props\": {\n          title: `Title`,\n        },\n      },\n    },\n  ],\n});\n","import React from \"react\";\nimport { Table, TableProps } from \"antd\";\nimport { TreeNode, createBehavior, createResource } from \"@designable/core\";\nimport { useTreeNode, TreeNodeWidget, DroppableWidget, useNodeIdProps, DnFC } from \"@designable/react\";\nimport { ArrayBase } from \"@formily/antd\";\nimport { observer } from \"@formily/react\";\nimport { LoadTemplate } from \"../../common/LoadTemplate\";\nimport cls from \"classnames\";\nimport { queryNodesByComponentPath, hasNodeByComponentPath, findNodeByComponentPath, createEnsureTypeItemsNode } from \"../../shared\";\nimport { useDropTemplate } from \"../../hooks\";\nimport { createArrayBehavior } from \"../ArrayBase\";\nimport \"./styles.less\";\nimport { createVoidFieldSchema } from \"../Field\";\nimport { AllSchemas } from \"../../schemas\";\nimport { AllLocales } from \"../../locales\";\n\nconst ensureObjectItemsNode = createEnsureTypeItemsNode(\"object\");\n\nconst HeaderCell: React.FC = (props: any) => {\n  return (\n    <th {...props} data-designer-node-id={props.className.match(/data-id\\:([^\\s]+)/)?.[1]}>\n      {props.children}\n    </th>\n  );\n};\n\nconst BodyCell: React.FC = (props: any) => {\n  return (\n    <td {...props} data-designer-node-id={props.className.match(/data-id\\:([^\\s]+)/)?.[1]}>\n      {props.children}\n    </td>\n  );\n};\n\nexport const ArrayTable: DnFC<TableProps<any>> = observer(props => {\n  const node = useTreeNode();\n  const nodeId = useNodeIdProps();\n  useDropTemplate(\"ArrayTable\", source => {\n    const sortHandleNode = new TreeNode({\n      componentName: \"Field\",\n      props: {\n        type: \"void\",\n        \"x-component\": \"ArrayTable.Column\",\n        \"x-component-props\": {\n          title: `Title`,\n        },\n      },\n      children: [\n        {\n          componentName: \"Field\",\n          props: {\n            type: \"void\",\n            \"x-component\": \"ArrayTable.SortHandle\",\n          },\n        },\n      ],\n    });\n    const indexNode = new TreeNode({\n      componentName: \"Field\",\n      props: {\n        type: \"void\",\n        \"x-component\": \"ArrayTable.Column\",\n        \"x-component-props\": {\n          title: `Title`,\n        },\n      },\n      children: [\n        {\n          componentName: \"Field\",\n          props: {\n            type: \"void\",\n            \"x-component\": \"ArrayTable.Index\",\n          },\n        },\n      ],\n    });\n    const columnNode = new TreeNode({\n      componentName: \"Field\",\n      props: {\n        type: \"void\",\n        \"x-component\": \"ArrayTable.Column\",\n        \"x-component-props\": {\n          title: `Title`,\n        },\n      },\n      children: source.map(node => {\n        node.props.title = undefined;\n        return node;\n      }),\n    });\n\n    const operationNode = new TreeNode({\n      componentName: \"Field\",\n      props: {\n        type: \"void\",\n        \"x-component\": \"ArrayTable.Column\",\n        \"x-component-props\": {\n          title: `Title`,\n        },\n      },\n      children: [\n        {\n          componentName: \"Field\",\n          props: {\n            type: \"void\",\n            \"x-component\": \"ArrayTable.Remove\",\n          },\n        },\n        {\n          componentName: \"Field\",\n          props: {\n            type: \"void\",\n            \"x-component\": \"ArrayTable.MoveDown\",\n          },\n        },\n        {\n          componentName: \"Field\",\n          props: {\n            type: \"void\",\n            \"x-component\": \"ArrayTable.MoveUp\",\n          },\n        },\n      ],\n    });\n    const objectNode = new TreeNode({\n      componentName: \"Field\",\n      props: {\n        type: \"object\",\n      },\n      children: [sortHandleNode, indexNode, columnNode, operationNode],\n    });\n    const additionNode = new TreeNode({\n      componentName: \"Field\",\n      props: {\n        type: \"void\",\n        title: \"Addition\",\n        \"x-component\": \"ArrayTable.Addition\",\n      },\n    });\n    return [objectNode, additionNode];\n  });\n  const columns = queryNodesByComponentPath(node, [\"ArrayTable\", \"*\", \"ArrayTable.Column\"]);\n  const additions = queryNodesByComponentPath(node, [\"ArrayTable\", \"ArrayTable.Addition\"]);\n  const defaultRowKey = () => {\n    return node.id;\n  };\n\n  const renderTable = () => {\n    if (node.children.length === 0) {\n      return <DroppableWidget />;\n    }\n    return (\n      <ArrayBase disabled>\n        <Table\n          size=\"small\"\n          bordered\n          {...props}\n          scroll={{ x: \"100%\" }}\n          className={cls(\"ant-formily-array-table\", props.className)}\n          style={{ marginBottom: 10, ...props.style }}\n          rowKey={defaultRowKey}\n          dataSource={[{ id: \"1\" }]}\n          pagination={false}\n          components={{\n            header: {\n              cell: HeaderCell,\n            },\n            body: {\n              cell: BodyCell,\n            },\n          }}\n        >\n          {columns.map(node => {\n            const children = node.children.map(child => {\n              return <TreeNodeWidget node={child} key={child.id} />;\n            });\n            const props = node.props[\"x-component-props\"];\n            return (\n              <Table.Column\n                {...props}\n                title={<div data-content-editable=\"x-component-props.title\">{props.title}</div>}\n                dataIndex={node.id}\n                className={`data-id:${node.id}`}\n                key={node.id}\n                render={(value, record, key) => {\n                  return (\n                    <ArrayBase.Item key={key} index={key} record={null}>\n                      {children.length > 0 ? children : \"Droppable\"}\n                    </ArrayBase.Item>\n                  );\n                }}\n              />\n            );\n          })}\n          {columns.length === 0 && <Table.Column render={() => <DroppableWidget />} />}\n        </Table>\n        {additions.map(child => {\n          return <TreeNodeWidget node={child} key={child.id} />;\n        })}\n      </ArrayBase>\n    );\n  };\n\n  useDropTemplate(\"ArrayTable.Column\", source => {\n    return source.map(node => {\n      node.props.title = undefined;\n      return node;\n    });\n  });\n\n  return (\n    <div {...nodeId} className=\"dn-array-table\">\n      {renderTable()}\n      <LoadTemplate\n        actions={[\n          {\n            title: node.getMessage(\"addSortHandle\"),\n            icon: \"AddSort\",\n            onClick: () => {\n              if (hasNodeByComponentPath(node, [\"ArrayTable\", \"*\", \"ArrayTable.Column\", \"ArrayTable.SortHandle\"])) {\n                return;\n              }\n              const tableColumn = new TreeNode({\n                componentName: \"Field\",\n                props: {\n                  type: \"void\",\n                  \"x-component\": \"ArrayTable.Column\",\n                  \"x-component-props\": {\n                    title: `Title`,\n                  },\n                },\n                children: [\n                  {\n                    componentName: \"Field\",\n                    props: {\n                      type: \"void\",\n                      \"x-component\": \"ArrayTable.SortHandle\",\n                    },\n                  },\n                ],\n              });\n              ensureObjectItemsNode(node).prepend(tableColumn);\n            },\n          },\n          {\n            title: node.getMessage(\"addIndex\"),\n            icon: \"AddIndex\",\n            onClick: () => {\n              if (hasNodeByComponentPath(node, [\"ArrayTable\", \"*\", \"ArrayTable.Column\", \"ArrayTable.Index\"])) {\n                return;\n              }\n              const tableColumn = new TreeNode({\n                componentName: \"Field\",\n                props: {\n                  type: \"void\",\n                  \"x-component\": \"ArrayTable.Column\",\n                  \"x-component-props\": {\n                    title: `Title`,\n                  },\n                },\n                children: [\n                  {\n                    componentName: \"Field\",\n                    props: {\n                      type: \"void\",\n                      \"x-component\": \"ArrayTable.Index\",\n                    },\n                  },\n                ],\n              });\n              const sortNode = findNodeByComponentPath(node, [\"ArrayTable\", \"*\", \"ArrayTable.Column\", \"ArrayTable.SortHandle\"]);\n              if (sortNode) {\n                sortNode.parent.insertAfter(tableColumn);\n              } else {\n                ensureObjectItemsNode(node).prepend(tableColumn);\n              }\n            },\n          },\n          {\n            title: node.getMessage(\"addColumn\"),\n            icon: \"AddColumn\",\n            onClick: () => {\n              const operationNode = findNodeByComponentPath(node, [\n                \"ArrayTable\",\n                \"*\",\n                \"ArrayTable.Column\",\n                name => {\n                  return name === \"ArrayTable.Remove\" || name === \"ArrayTable.MoveDown\" || name === \"ArrayTable.MoveUp\";\n                },\n              ]);\n              const tableColumn = new TreeNode({\n                componentName: \"Field\",\n                props: {\n                  type: \"void\",\n                  \"x-component\": \"ArrayTable.Column\",\n                  \"x-component-props\": {\n                    title: `Title`,\n                  },\n                },\n              });\n              if (operationNode) {\n                operationNode.parent.insertBefore(tableColumn);\n              } else {\n                ensureObjectItemsNode(node).append(tableColumn);\n              }\n            },\n          },\n          {\n            title: node.getMessage(\"addOperation\"),\n            icon: \"AddOperation\",\n            onClick: () => {\n              const oldOperationNode = findNodeByComponentPath(node, [\n                \"ArrayTable\",\n                \"*\",\n                \"ArrayTable.Column\",\n                name => {\n                  return name === \"ArrayTable.Remove\" || name === \"ArrayTable.MoveDown\" || name === \"ArrayTable.MoveUp\";\n                },\n              ]);\n              const oldAdditionNode = findNodeByComponentPath(node, [\"ArrayTable\", \"ArrayTable.Addition\"]);\n              if (!oldOperationNode) {\n                const operationNode = new TreeNode({\n                  componentName: \"Field\",\n                  props: {\n                    type: \"void\",\n                    \"x-component\": \"ArrayTable.Column\",\n                    \"x-component-props\": {\n                      title: `Title`,\n                    },\n                  },\n                  children: [\n                    {\n                      componentName: \"Field\",\n                      props: {\n                        type: \"void\",\n                        \"x-component\": \"ArrayTable.Remove\",\n                      },\n                    },\n                    {\n                      componentName: \"Field\",\n                      props: {\n                        type: \"void\",\n                        \"x-component\": \"ArrayTable.MoveDown\",\n                      },\n                    },\n                    {\n                      componentName: \"Field\",\n                      props: {\n                        type: \"void\",\n                        \"x-component\": \"ArrayTable.MoveUp\",\n                      },\n                    },\n                  ],\n                });\n                ensureObjectItemsNode(node).append(operationNode);\n              }\n              if (!oldAdditionNode) {\n                const additionNode = new TreeNode({\n                  componentName: \"Field\",\n                  props: {\n                    type: \"void\",\n                    title: \"Addition\",\n                    \"x-component\": \"ArrayTable.Addition\",\n                  },\n                });\n                ensureObjectItemsNode(node).insertAfter(additionNode);\n              }\n            },\n          },\n        ]}\n      />\n    </div>\n  );\n});\n\nArrayBase.mixin(ArrayTable);\n\nArrayTable.Behavior = createBehavior(createArrayBehavior(\"ArrayTable\"), {\n  name: \"ArrayTable.Column\",\n  extends: [\"Field\"],\n  selector: node => node.props[\"x-component\"] === \"ArrayTable.Column\",\n  designerProps: {\n    droppable: true,\n    allowDrop: node => node.props[\"type\"] === \"object\" && node.parent?.props?.[\"x-component\"] === \"ArrayTable\",\n    propsSchema: createVoidFieldSchema(AllSchemas.ArrayTable.Column),\n  },\n  designerLocales: AllLocales.ArrayTableColumn,\n});\n\nArrayTable.Resource = createResource({\n  icon: \"ArrayTableSource\",\n  elements: [\n    {\n      componentName: \"Field\",\n      props: {\n        type: \"array\",\n        \"x-decorator\": \"FormItem\",\n        \"x-component\": \"ArrayTable\",\n      },\n    },\n  ],\n});\n","import React, { Fragment, useState } from \"react\";\nimport { observer } from \"@formily/react\";\nimport { Tabs } from \"antd\";\nimport { TabsProps, TabPaneProps } from \"antd/lib/tabs\";\nimport { TreeNode, createBehavior, createResource } from \"@designable/core\";\nimport { useNodeIdProps, useTreeNode, TreeNodeWidget, DroppableWidget, DnFC } from \"@designable/react\";\nimport { LoadTemplate } from \"../../common/LoadTemplate\";\nimport { useDropTemplate } from \"../../hooks\";\nimport { createVoidFieldSchema } from \"../Field\";\nimport { AllSchemas } from \"../../schemas\";\nimport { AllLocales } from \"../../locales\";\nimport { matchComponent } from \"../../shared\";\n\nconst parseTabs = (parent: TreeNode) => {\n  const tabs: TreeNode[] = [];\n  parent.children.forEach(node => {\n    if (matchComponent(node, \"FormTab.TabPane\")) {\n      tabs.push(node);\n    }\n  });\n  return tabs;\n};\n\nconst getCorrectActiveKey = (activeKey: string, tabs: TreeNode[]) => {\n  if (tabs.length === 0) {\n    return;\n  }\n  if (tabs.some(node => node.id === activeKey)) {\n    return activeKey;\n  }\n  return tabs[tabs.length - 1].id;\n};\n\nexport const FormTab: DnFC<TabsProps> & {\n  TabPane?: React.FC<TabPaneProps>;\n} = observer(props => {\n  const [activeKey, setActiveKey] = useState<string>();\n  const nodeId = useNodeIdProps();\n  const node = useTreeNode();\n  const designer = useDropTemplate(\"FormTab\", source => {\n    return [\n      new TreeNode({\n        componentName: \"Field\",\n        props: {\n          type: \"void\",\n          \"x-component\": \"FormTab.TabPane\",\n          \"x-component-props\": {\n            tab: `Unnamed Title`,\n          },\n        },\n        children: source,\n      }),\n    ];\n  });\n  const tabs = parseTabs(node);\n  const renderTabs = () => {\n    if (!node.children?.length) {\n      return <DroppableWidget />;\n    }\n    return (\n      <Tabs\n        {...props}\n        activeKey={getCorrectActiveKey(activeKey, tabs)}\n        onChange={id => {\n          setActiveKey(id);\n        }}\n      >\n        {tabs.map(tab => {\n          const props = tab.props[\"x-component-props\"] || {};\n          return (\n            <Tabs.TabPane\n              {...props}\n              style={{ ...props.style }}\n              tab={\n                <span data-content-editable=\"x-component-props.tab\" data-content-editable-node-id={tab.id}>\n                  {props.tab}\n                </span>\n              }\n              key={tab.id}\n            >\n              {React.createElement(\n                \"div\",\n                {\n                  [designer.props.nodeIdAttrName]: tab.id,\n                  style: {\n                    padding: \"20px 0\",\n                  },\n                },\n                tab.children.length ? <TreeNodeWidget node={tab} /> : <DroppableWidget node={tab} />,\n              )}\n            </Tabs.TabPane>\n          );\n        })}\n      </Tabs>\n    );\n  };\n  return (\n    <div {...nodeId}>\n      {renderTabs()}\n      <LoadTemplate\n        actions={[\n          {\n            title: node.getMessage(\"addTabPane\"),\n            icon: \"AddPanel\",\n            onClick: () => {\n              const tabPane = new TreeNode({\n                componentName: \"Field\",\n                props: {\n                  type: \"void\",\n                  \"x-component\": \"FormTab.TabPane\",\n                  \"x-component-props\": {\n                    tab: `Unnamed Title`,\n                  },\n                },\n              });\n              node.append(tabPane);\n              setActiveKey(tabPane.id);\n            },\n          },\n        ]}\n      />\n    </div>\n  );\n});\n\n// eslint-disable-next-line react/prop-types\nFormTab.TabPane = ({ children }) => {\n  return <Fragment>{children}</Fragment>;\n};\n\nFormTab.Behavior = createBehavior(\n  {\n    name: \"FormTab\",\n    extends: [\"Field\"],\n    selector: node => node.props[\"x-component\"] === \"FormTab\",\n    designerProps: {\n      droppable: true,\n      allowAppend: (target, source) =>\n        target.children.length === 0 || source.every(node => node.props[\"x-component\"] === \"FormTab.TabPane\"),\n      propsSchema: createVoidFieldSchema(AllSchemas.FormTab),\n    },\n    designerLocales: AllLocales.FormTab,\n  },\n  {\n    name: \"FormTab.TabPane\",\n    extends: [\"Field\"],\n    selector: node => node.props[\"x-component\"] === \"FormTab.TabPane\",\n    designerProps: {\n      droppable: true,\n      allowDrop: node => node.props[\"x-component\"] === \"FormTab\",\n      propsSchema: createVoidFieldSchema(AllSchemas.FormTab.TabPane),\n    },\n    designerLocales: AllLocales.FormTabPane,\n  },\n);\n\nFormTab.Resource = createResource({\n  icon: \"TabSource\",\n  elements: [\n    {\n      componentName: \"Field\",\n      props: {\n        type: \"void\",\n        \"x-component\": \"FormTab\",\n      },\n    },\n  ],\n});\n","import React, { Fragment, useState } from \"react\";\nimport { observer } from \"@formily/react\";\nimport { Collapse } from \"antd\";\nimport { CollapseProps, CollapsePanelProps } from \"antd/lib/collapse\";\nimport { TreeNode, createBehavior, createResource } from \"@designable/core\";\nimport { useTreeNode, useNodeIdProps, DroppableWidget, TreeNodeWidget, DnFC } from \"@designable/react\";\nimport { toArr } from \"@formily/shared\";\nimport { LoadTemplate } from \"../../common/LoadTemplate\";\nimport { useDropTemplate } from \"../../hooks\";\nimport { createVoidFieldSchema } from \"../Field\";\nimport { AllSchemas } from \"../../schemas\";\nimport { AllLocales } from \"../../locales\";\nimport { matchComponent } from \"../../shared\";\n\nconst parseCollapse = (parent: TreeNode) => {\n  const tabs: TreeNode[] = [];\n  parent.children.forEach(node => {\n    if (matchComponent(node, \"FormCollapse.CollapsePanel\")) {\n      tabs.push(node);\n    }\n  });\n  return tabs;\n};\n\nexport const FormCollapse: DnFC<CollapseProps> & {\n  CollapsePanel?: React.FC<CollapsePanelProps>;\n} = observer(props => {\n  const [activeKey, setActiveKey] = useState<string | string[]>([]);\n  const node = useTreeNode();\n  const nodeId = useNodeIdProps();\n  const designer = useDropTemplate(\"FormCollapse\", source => {\n    const panelNode = new TreeNode({\n      componentName: \"Field\",\n      props: {\n        type: \"void\",\n        \"x-component\": \"FormCollapse.CollapsePanel\",\n        \"x-component-props\": {\n          header: `Unnamed Title`,\n        },\n      },\n      children: source,\n    });\n\n    setActiveKey(toArr(activeKey).concat(panelNode.id));\n    return [panelNode];\n  });\n  const panels = parseCollapse(node);\n  const renderCollapse = () => {\n    if (!node.children?.length) {\n      return <DroppableWidget />;\n    }\n    return (\n      <Collapse {...props} activeKey={panels.map(tab => tab.id)}>\n        {panels.map(panel => {\n          const props = panel.props[\"x-component-props\"] || {};\n          return (\n            <Collapse.Panel\n              {...props}\n              style={{ ...props.style }}\n              header={\n                <span data-content-editable=\"x-component-props.header\" data-content-editable-node-id={panel.id}>\n                  {props.header}\n                </span>\n              }\n              key={panel.id}\n            >\n              {React.createElement(\n                \"div\",\n                {\n                  [designer.props.nodeIdAttrName]: panel.id,\n                  style: {\n                    padding: \"20px 0\",\n                  },\n                },\n                panel.children.length ? <TreeNodeWidget node={panel} /> : <DroppableWidget />,\n              )}\n            </Collapse.Panel>\n          );\n        })}\n      </Collapse>\n    );\n  };\n  return (\n    <div {...nodeId}>\n      {renderCollapse()}\n      <LoadTemplate\n        actions={[\n          {\n            title: node.getMessage(\"addCollapsePanel\"),\n            icon: \"AddPanel\",\n            onClick: () => {\n              const tabPane = new TreeNode({\n                componentName: \"Field\",\n                props: {\n                  type: \"void\",\n                  \"x-component\": \"FormCollapse.CollapsePanel\",\n                  \"x-component-props\": {\n                    header: `Unnamed Title`,\n                  },\n                },\n              });\n              node.append(tabPane);\n              const keys = toArr(activeKey);\n              setActiveKey(keys.concat(tabPane.id));\n            },\n          },\n        ]}\n      />\n    </div>\n  );\n});\n\n// eslint-disable-next-line react/prop-types\nFormCollapse.CollapsePanel = ({ children }) => {\n  return <Fragment>{children}</Fragment>;\n};\n\nFormCollapse.Behavior = createBehavior(\n  {\n    name: \"FormCollapse\",\n    extends: [\"Field\"],\n    selector: node => node.props[\"x-component\"] === \"FormCollapse\",\n    designerProps: {\n      droppable: true,\n      allowAppend: (target, source) =>\n        target.children.length === 0 || source.every(node => node.props[\"x-component\"] === \"FormCollapse.CollapsePanel\"),\n      propsSchema: createVoidFieldSchema(AllSchemas.FormCollapse),\n    },\n    designerLocales: AllLocales.FormCollapse,\n  },\n  {\n    name: \"FormCollapse.CollapsePanel\",\n    extends: [\"Field\"],\n    selector: node => node.props[\"x-component\"] === \"FormCollapse.CollapsePanel\",\n    designerProps: {\n      droppable: true,\n      allowDrop: node => node.props[\"x-component\"] === \"FormCollapse\",\n      propsSchema: createVoidFieldSchema(AllSchemas.FormCollapse.CollapsePanel),\n    },\n    designerLocales: AllLocales.FormCollapsePanel,\n  },\n);\n\nFormCollapse.Resource = createResource({\n  icon: \"CollapseSource\",\n  elements: [\n    {\n      componentName: \"Field\",\n      props: {\n        type: \"void\",\n        \"x-component\": \"FormCollapse\",\n      },\n    },\n  ],\n});\n","import React from \"react\";\nimport { FormGrid as FormilyGird } from \"@formily/antd\";\nimport { TreeNode, createBehavior, createResource } from \"@designable/core\";\nimport { DnFC, useTreeNode, useNodeIdProps, DroppableWidget } from \"@designable/react\";\nimport { observer } from \"@formily/reactive-react\";\nimport { LoadTemplate } from \"../../common/LoadTemplate\";\nimport { createFieldSchema } from \"../Field\";\nimport { AllSchemas } from \"../../schemas\";\nimport { AllLocales } from \"../../locales\";\nimport \"./styles.less\";\n\ntype formilyGrid = typeof FormilyGird;\n\nexport const FormGrid: DnFC<React.ComponentProps<formilyGrid>> & {\n  GridColumn?: React.FC<React.ComponentProps<formilyGrid[\"GridColumn\"]>>;\n} = observer(props => {\n  const node = useTreeNode();\n  const nodeId = useNodeIdProps();\n  if (node.children.length === 0) {\n    return <DroppableWidget {...props} />;\n  }\n\n  return (\n    <div {...nodeId} className=\"dn-grid\">\n      <FormilyGird {...props}>{props.children}</FormilyGird>\n      <LoadTemplate\n        actions={[\n          {\n            title: node.getMessage(\"addGridColumn\"),\n            icon: \"AddColumn\",\n            onClick: () => {\n              const column = new TreeNode({\n                componentName: \"Field\",\n                props: {\n                  type: \"void\",\n                  \"x-component\": \"FormGrid.GridColumn\",\n                },\n              });\n              node.append(column);\n            },\n          },\n        ]}\n      />\n    </div>\n  );\n});\n\nFormGrid.GridColumn = observer(({ gridSpan, ...props }) => {\n  return (\n    <DroppableWidget {...props} data-grid-span={gridSpan}>\n      {props.children}\n    </DroppableWidget>\n  );\n});\n\nFormGrid.Behavior = createBehavior(\n  {\n    name: \"FormGrid\",\n    extends: [\"Field\"],\n    selector: node => node.props[\"x-component\"] === \"FormGrid\",\n    designerProps: {\n      droppable: true,\n      allowDrop: node => node.props[\"x-component\"] !== \"FormGrid\",\n      propsSchema: createFieldSchema(AllSchemas.FormGrid),\n    },\n    designerLocales: AllLocales.FormGrid,\n  },\n  {\n    name: \"FormGrid.GridColumn\",\n    extends: [\"Field\"],\n    selector: node => node.props[\"x-component\"] === \"FormGrid.GridColumn\",\n    designerProps: {\n      droppable: true,\n      resizable: {\n        width(node) {\n          const span = Number(node.props[\"x-component-props\"]?.gridSpan ?? 1);\n          return {\n            plus: () => {\n              if (span + 1 > 12) {\n                return;\n              }\n              node.props[\"x-component-props\"] = node.props[\"x-component-props\"] || {};\n              node.props[\"x-component-props\"].gridSpan = span + 1;\n            },\n            minus: () => {\n              if (span - 1 < 1) {\n                return;\n              }\n              node.props[\"x-component-props\"] = node.props[\"x-component-props\"] || {};\n              node.props[\"x-component-props\"].gridSpan = span - 1;\n            },\n          };\n        },\n      },\n      resizeXPath: \"x-component-props.gridSpan\",\n      resizeStep: 1,\n      resizeMin: 1,\n      resizeMax: 12,\n      allowDrop: node => node.props[\"x-component\"] === \"FormGrid\",\n      propsSchema: createFieldSchema(AllSchemas.FormGrid.GridColumn),\n    },\n    designerLocales: AllLocales.FormGridColumn,\n  },\n);\n\nFormGrid.Resource = createResource({\n  icon: \"GridSource\",\n  elements: [\n    {\n      componentName: \"Field\",\n      props: {\n        type: \"void\",\n        \"x-component\": \"FormGrid\",\n      },\n      children: [\n        {\n          componentName: \"Field\",\n          props: {\n            type: \"void\",\n            \"x-component\": \"FormGrid.GridColumn\",\n          },\n        },\n        {\n          componentName: \"Field\",\n          props: {\n            type: \"void\",\n            \"x-component\": \"FormGrid.GridColumn\",\n          },\n        },\n        {\n          componentName: \"Field\",\n          props: {\n            type: \"void\",\n            \"x-component\": \"FormGrid.GridColumn\",\n          },\n        },\n      ],\n    },\n  ],\n});\n","import React from \"react\";\nimport { FormLayout as FormilyFormLayout } from \"@formily/antd\";\nimport { createBehavior, createResource } from \"@designable/core\";\nimport { DnFC } from \"@designable/react\";\nimport { withContainer } from \"../../common/Container\";\nimport { createVoidFieldSchema } from \"../Field\";\nimport { AllSchemas } from \"../../schemas\";\nimport { AllLocales } from \"../../locales\";\n\nexport const FormLayout: DnFC<React.ComponentProps<typeof FormilyFormLayout>> = withContainer(FormilyFormLayout);\n\nFormLayout.Behavior = createBehavior({\n  name: \"FormLayout\",\n  extends: [\"Field\"],\n  selector: node => node.props[\"x-component\"] === \"FormLayout\",\n  designerProps: {\n    droppable: true,\n    propsSchema: createVoidFieldSchema(AllSchemas.FormLayout),\n  },\n  designerLocales: AllLocales.FormLayout,\n});\n\nFormLayout.Resource = createResource({\n  icon: \"FormLayoutSource\",\n  elements: [\n    {\n      componentName: \"Field\",\n      props: {\n        type: \"void\",\n        \"x-component\": \"FormLayout\",\n      },\n    },\n  ],\n});\n","import \"antd/dist/antd.less\";\nimport \"./TeslerFormBuilder.css\";\nimport * as React from \"react\";\nimport {\n  Designer,\n  DesignerToolsWidget,\n  ViewToolsWidget,\n  Workspace,\n  OutlineTreeWidget,\n  ResourceWidget,\n  HistoryWidget,\n  StudioPanel,\n  CompositePanel,\n  WorkspacePanel,\n  ToolbarPanel,\n  ViewportPanel,\n  ViewPanel,\n  SettingsPanel,\n  ComponentTreeWidget,\n} from \"@designable/react\";\nimport { SettingsForm } from \"@designable/react-settings-form\";\nimport { createDesigner, GlobalRegistry, Shortcut, KeyCode } from \"@designable/core\";\nimport { LogoWidget, ActionsWidget, PreviewWidget, SchemaEditorWidget, MarkupSchemaWidget } from \"../src/widgets\";\nimport { saveSchema } from \"../src/service\";\nimport {\n  Form,\n  Field,\n  Input,\n  Select,\n  TreeSelect,\n  Cascader,\n  Radio,\n  Checkbox,\n  Slider,\n  Rate,\n  NumberPicker,\n  Transfer,\n  Password,\n  DatePicker,\n  TimePicker,\n  Upload,\n  Switch,\n  Text,\n  Card,\n  ArrayCards,\n  ObjectContainer,\n  ArrayTable,\n  Space,\n  FormTab,\n  FormCollapse,\n  FormLayout,\n  FormGrid,\n} from \"./components\";\n\nGlobalRegistry.registerDesignerLocales({\n  \"ru-RU\": {\n    sources: {\n      Inputs: \"Компоненты\",\n      Layouts: \"Верстка\",\n      Arrays: \"Массивы\",\n      Displays: \"Контент\",\n    },\n  },\n  \"en-US\": {\n    sources: {\n      Inputs: \"Inputs\",\n      Layouts: \"Layouts\",\n      Arrays: \"Arrays\",\n      Displays: \"Displays\",\n    },\n  },\n});\n\nconst App = () => {\n  const engine = React.useMemo(\n    () =>\n      createDesigner({\n        shortcuts: [\n          new Shortcut({\n            codes: [\n              [KeyCode.Meta, KeyCode.S],\n              [KeyCode.Control, KeyCode.S],\n            ],\n            handler(ctx) {\n              saveSchema(ctx.engine);\n            },\n          }),\n        ],\n        rootComponentName: \"Form\",\n      }),\n    [],\n  );\n  return (\n    <Designer engine={engine}>\n      <StudioPanel logo={<LogoWidget />} actions={<ActionsWidget />}>\n        <CompositePanel>\n          <CompositePanel.Item title=\"panels.Component\" icon=\"Component\">\n            <ResourceWidget\n              title=\"sources.Inputs\"\n              sources={[\n                Input,\n                Password,\n                NumberPicker,\n                Rate,\n                Slider,\n                Select,\n                TreeSelect,\n                Cascader,\n                Transfer,\n                Checkbox,\n                Radio,\n                DatePicker,\n                TimePicker,\n                Upload,\n                Switch,\n                ObjectContainer,\n              ]}\n            />\n            <ResourceWidget title=\"sources.Layouts\" sources={[Card, FormGrid, FormTab, FormLayout, FormCollapse, Space]} />\n            <ResourceWidget title=\"sources.Arrays\" sources={[ArrayCards, ArrayTable]} />\n            <ResourceWidget title=\"sources.Displays\" sources={[Text]} />\n          </CompositePanel.Item>\n          <CompositePanel.Item title=\"panels.OutlinedTree\" icon=\"Outline\">\n            <OutlineTreeWidget />\n          </CompositePanel.Item>\n          <CompositePanel.Item title=\"panels.History\" icon=\"History\">\n            <HistoryWidget />\n          </CompositePanel.Item>\n        </CompositePanel>\n        <Workspace id=\"form\">\n          <WorkspacePanel>\n            <ToolbarPanel>\n              <DesignerToolsWidget />\n              <ViewToolsWidget use={[\"DESIGNABLE\", \"JSONTREE\", \"MARKUP\", \"PREVIEW\"]} />\n            </ToolbarPanel>\n            <ViewportPanel style={{ height: \"100%\" }}>\n              <ViewPanel type=\"DESIGNABLE\">\n                {() => (\n                  <ComponentTreeWidget\n                    components={{\n                      Form,\n                      Field,\n                      Input,\n                      Select,\n                      TreeSelect,\n                      Cascader,\n                      Radio,\n                      Checkbox,\n                      Slider,\n                      Rate,\n                      NumberPicker,\n                      Transfer,\n                      Password,\n                      DatePicker,\n                      TimePicker,\n                      Upload,\n                      Switch,\n                      Text,\n                      Card,\n                      ArrayCards,\n                      ArrayTable,\n                      Space,\n                      FormTab,\n                      FormCollapse,\n                      FormGrid,\n                      FormLayout,\n                      ObjectContainer,\n                    }}\n                  />\n                )}\n              </ViewPanel>\n              <ViewPanel type=\"JSONTREE\" scrollable={false}>\n                {(tree, onChange) => <SchemaEditorWidget tree={tree} onChange={onChange} />}\n              </ViewPanel>\n              <ViewPanel type=\"MARKUP\" scrollable={false}>\n                {tree => <MarkupSchemaWidget tree={tree} />}\n              </ViewPanel>\n              <ViewPanel type=\"PREVIEW\">{tree => <PreviewWidget tree={tree} />}</ViewPanel>\n            </ViewportPanel>\n          </WorkspacePanel>\n        </Workspace>\n        <SettingsPanel title=\"panels.PropertySettings\">\n          <SettingsForm uploadAction=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\" />\n        </SettingsPanel>\n      </StudioPanel>\n    </Designer>\n  );\n};\n\nexport default App;\n"],"sourceRoot":""}